local a={}local function b(c)if#c>0 and c:sub(1,1):match"%u"then return c end;error('"'..c..'" should start with a capital letter')end;local function d(e)local f={}local g={}g.__index=g;local function h(i)return setmetatable({value=i},g)end;function g:__lt(j)return self.value<j.value end;function g:__gt(j)return self.value>j.value end;function g:__tostring()return tostring(self.value)end;local function k(l,i)local m=i+1;if not l[m]then return m end;error("Overlapping index: "..tostring(m))end;local i=0;for n,o in ipairs(e)do if type(o)=="string"then local c=b(o)local p=k(f,i)f[p]=c;if f[c]then error("Duplicate enum member name: "..c)end;f[c]=h(p)i=p elseif type(o)=="table"and type(o[1])=="string"and type(o[2])=="number"then local c=b(o[1])local p=o[2]if f[p]then error("Overlapping index: "..tostring(p))end;f[p]=c;if f[c]then error("Duplicate name: "..c)end;f[c]=h(p)i=p else error"Invalid way to specify an enum variant"end end;return require("plenary.tbl").freeze(setmetatable(f,a))end;a.__index=function(n,q)if a[q]then return a[q]end;error("Invalid enum key: "..tostring(q))end;function a:has_key(q)if rawget(getmetatable(self).__index,q)then return true end;return false end;function a:from_str(q)if self:has_key(q)then return self[q]end end;function a:from_num(r)local q=self[r]if q then return self[q]end end;local function s(e)return getmetatable(getmetatable(e).__index)==a end;return setmetatable({is_enum=s,make_enum=d},{__call=function(n,e)return d(e)end})
