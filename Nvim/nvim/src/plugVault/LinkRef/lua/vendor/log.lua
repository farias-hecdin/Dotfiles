local a={plugin='vlog.nvim',use_console=true,highlights=true,use_file=true,level="trace",modes={{name="trace",hl="Comment"},{name="debug",hl="Comment"},{name="info",hl="None"},{name="warn",hl="WarningMsg"},{name="error",hl="ErrorMsg"},{name="fatal",hl="ErrorMsg"}},float_precision=0.01}local b={}local unpack=unpack or table.unpack;b.new=function(c,d)c=vim.tbl_deep_extend("force",a,c)local e=string.format('%s/%s.log',vim.api.nvim_call_function('stdpath',{'data'}),c.plugin)local f;if d then f=b else f={}end;local g={}for h,i in ipairs(c.modes)do g[i.name]=h end;local j=function(k,l)l=l or 1;k=k/l;return(k>0 and math.floor(k+.5)or math.ceil(k-.5))*l end;local m=function(...)local n={}for h=1,select('#',...)do local k=select(h,...)if type(k)=="number"and c.float_precision then k=tostring(j(k,c.float_precision))elseif type(k)=="table"then k=vim.inspect(k)else k=tostring(k)end;n[#n+1]=k end;return table.concat(n," ")end;local o=function(p,q,r,...)if p<g[c.level]then return end;local s=q.name:upper()local t=r(...)local u=debug.getinfo(2,"Sl")local v=u.short_src..":"..u.currentline;if c.use_console then local w=string.format("[%-6s%s] %s: %s",s,os.date("%H:%M:%S"),v,t)if c.highlights and q.hl then vim.cmd(string.format("echohl %s",q.hl))end;local x=vim.split(w,"\n")for y,i in ipairs(x)do vim.cmd(string.format([[echom "[%s] %s"]],c.plugin,vim.fn.escape(i,'"')))end;if c.highlights and q.hl then vim.cmd("echohl NONE")end end;if c.use_file then local z=io.open(e,"a")local A=string.format("[%-6s%s] %s: %s\n",s,os.date(),v,t)z:write(A)z:close()end end;for h,k in ipairs(c.modes)do f[k.name]=function(...)return o(h,k,m,...)end;f[("fmt_%s"):format(k.name)]=function()return o(h,k,function(...)local B={...}local C=table.remove(B,1)local D={}for y,i in ipairs(B)do table.insert(D,vim.inspect(i))end;return string.format(C,unpack(D))end)end end end;b.new(a,true)return b
