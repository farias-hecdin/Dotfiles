local a={}local vim=vim;local b=require('CSSPluginHelpers')local c={}a.options={parent_search_limit=5,filename_to_track="main",disable_keymaps=false}a.setup=function(d)a.options=vim.tbl_deep_extend("keep",d or{},a.options)if not a.options.disable_keymaps then local e={buffer=0,silent=true}vim.api.nvim_create_autocmd('FileType',{desc='CSSVarViewer keymaps',callback=function()vim.keymap.set('n','<leader>cv',":CSSVarViewer<CR>",e)vim.keymap.set('v','<leader>cv',":lua require('CSSVarViewer').paste_value()<CR>",e)end})end end;vim.api.nvim_create_user_command("CSSVarViewer",function(f)if#(f.fargs[1]or"")>1 then f.fargs[1],f.fargs[2],f.fargs[3]=1,f.fargs[1],f.fargs[2]end;local g=tonumber(f.fargs[1]or a.options.parent_search_limit)local h=(f.fargs[2]or a.options.filename_to_track)..".css"local i=f.fargs[3]or nil;a.get_cssvar_from_file(g,h,i)a.display_virtual_text()end,{desc="Track the values of the CSS variables",nargs="*"})a.get_cssvar_from_file=function(g,h,i)local j=b.find_file(h,i,1,g)if not j then vim.print("[CSSVarHighlight] Attempt limit reached. Operation cancelled.")return end;local k=b.get_css_attribute(j,"%-%-[-_%w]*")c=k end;a.display_virtual_text=function()local function l(m)local n={}local o,p=b.get_current_line_content()for q in p:gmatch('var%(%-%-[-_%w]*%)')do local r=c[q:match('%((%-%-.+)%)')]table.insert(n,r)end;b.show_virtual_text(n,o,m)end;local m=vim.api.nvim_create_namespace("cssvarviewer")vim.api.nvim_create_autocmd({"BufEnter","BufWinEnter","CursorMoved"},{pattern="*.css",callback=function()l(m)end})vim.print("[CSSVarViewer] The data has been updated. "..os.date("%H:%M:%S"))end;a.paste_value=function()local s,t=b.capture_visual_selection()for u,r in pairs(c)do if t and u==t[1]:match('%((%-%-.+)%)')then t[1]=r;vim.print(string.format("[CSSVarViewer] You replaced '%s' with '%s'.",u,r))b.change_text(s,t)end end end;return a
