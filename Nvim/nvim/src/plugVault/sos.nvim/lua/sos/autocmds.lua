local a={}local b=require"sos.impl"local c=require"sos.commands"local d=vim.api;local e="sos-autosaver"function a.clear()d.nvim_create_augroup(e,{clear=true})end;function a.refresh(f)d.nvim_create_augroup(e,{clear=true})if not f.enabled then return end;d.nvim_create_autocmd({"UIEnter","TermLeave"},{group=e,pattern="*",desc="Check file times (i.e. check if files were modified outside vim) (triggers 'autoread' and/or prompts user for further action if changes are detected)",once=false,nested=true,command="checktime"})d.nvim_create_autocmd("VimLeavePre",{desc="Cleanup",group=e,pattern="*",once=true,nested=false,command=[[silent call v:lua.require'sos.commands'.SosDisable()]]})if f.save_on_bufleave then d.nvim_create_autocmd("BufLeave",{group=e,pattern="*",nested=true,desc="Save buffer before leaving it",callback=function(g)local h,i=b.write_buf_if_needed(g.buf)if not h then d.nvim_err_writeln(("[sos.nvim]: %s: %s"):format(i,d.nvim_buf_get_name(g.buf)))end end})end;if f.save_on_focuslost then d.nvim_create_autocmd("FocusLost",{group=e,pattern="*",desc="Save all buffers when Neovim loses focus",nested=true,callback=function(j)f.on_timer()end})d.nvim_create_autocmd("VimSuspend",{group=e,pattern="*",desc="Save all buffers when Neovim is suspended",nested=true,callback=function(j)f.on_timer()end})end;if f.save_on_cmd then d.nvim_create_autocmd("CmdlineLeave",{group=e,pattern=":",nested=true,desc="Save all buffers before running a command",callback=function(j)if f.enabled==false or f.save_on_cmd==false or vim.v.event.abort==1 or vim.v.event.abort==true then return end;local k=vim.fn.getcmdline()or""if f.save_on_cmd~="all"then if f.save_on_cmd=="some"and b.savable_cmdline:match_str(k)then f.on_timer()return end;local l=b.savable_cmds;if type(f.save_on_cmd)=="table"then l=f.save_on_cmd end;repeat if k==""then return end;local h,m=pcall(d.nvim_parse_cmd,k,{})if not h then return end;k=m.nextcmd or""until l[m.cmd]else local h,m=pcall(d.nvim_parse_cmd,k,{})if h and require("sos.commands")[m.cmd]then return end end;f.on_timer()end})end end;return a
