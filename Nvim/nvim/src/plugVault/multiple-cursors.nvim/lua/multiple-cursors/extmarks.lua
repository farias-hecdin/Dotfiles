local a={}local b="MultipleCursorsCursor"local c="MultipleCursorsVisual"local d=require("multiple-cursors.common")local e=nil;local f=0;local g=nil;local h=nil;local i=nil;local j=nil;function a.setup()if next(vim.api.nvim_get_hl(0,{name="Cursor"}))then vim.api.nvim_set_hl(0,b,{link="Cursor",default=true})else vim.api.nvim_set_hl(0,b,{link="TermCursor",default=true})end;vim.api.nvim_set_hl(0,c,{link="Visual",default=true})e=vim.api.nvim_create_namespace("multiple-cursors")end;function a.clear()vim.api.nvim_buf_clear_namespace(0,e,0,-1)end;local function k(l,m,n,o,p)local q={}if n~=0 then q.id=n end;local r=d.get_length_of_line(l)if r==0 or m>r then m=r+1;q.virt_text={{" ",o}}q.virt_text_pos="overlay"else local s=vim.fn.getline(l)local t=vim.fn.charidx(s,m-1)q.end_col=vim.fn.byteidx(s,t+1)q.hl_group=o end;if p~=0 then q.priority=p end;return vim.api.nvim_buf_set_extmark(0,e,l-1,m-1,q)end;function a.save_cursor()local u=vim.fn.getcurpos()g=u[2]local m=u[3]h=u[5]f=k(g,m,f,"",0)end;function a.restore_cursor()if f~=nil and g~=nil then local v=vim.api.nvim_buf_get_extmark_by_id(0,e,f,{})vim.api.nvim_buf_del_extmark(0,e,f)if next(v)~=nil then local l=v[1]+1;local m=v[2]+1;local w=h;if w<vim.v.maxcol and m<d.get_max_col(l)then w=m end;vim.fn.cursor({l,m,0,w})else vim.fn.cursor({g,1,0,1})end;f=nil;g=nil;h=nil end end;local function x(y)if y.editable then y.mark_id=k(y.lnum,y.col,y.mark_id,b,9999)else y.mark_id=k(y.lnum,y.col,y.mark_id,"",9999)end end;local function z(n,A,B,C,D)if A>C then if n>0 then vim.api.nvim_buf_del_extmark(0,e,n)end;return 0 else local q={}if n>0 then q.id=n end;if A~=C then q.end_row=C-1 end;q.end_col=D-1;q.hl_group=c;q.priority=9998;return vim.api.nvim_buf_set_extmark(0,e,A-1,B-1,q)end end;local function E(F,G)for H=1,#G do local q={}q.virt_text={{" ",c}}q.virt_text_pos="overlay"q.priority=9998;if#F>=H then q.id=F[H]end;local I=vim.api.nvim_buf_set_extmark(0,e,G[H]-1,0,q)if#F>=H then F[H]=I else table.insert(F,I)end end;for H=#F,1,-1 do if H<=#G then return end;vim.api.nvim_buf_del_extmark(0,e,F[H])table.remove(F,H)end end;local function J(y)if y.visual_start_mark_id~=0 then vim.api.nvim_buf_del_extmark(0,e,y.visual_start_mark_id)y.visual_start_mark_id=0 end;if y.visual_multiline_mark_id~=0 then vim.api.nvim_buf_del_extmark(0,e,y.visual_multiline_mark_id)y.visual_multiline_mark_id=0 end;if next(y.visual_empty_line_mark_ids)~=nil then for H=1,#y.visual_empty_line_mark_ids do vim.api.nvim_buf_del_extmark(0,e,y.visual_empty_line_mark_ids[H])end;y.visual_empty_line_mark_ids={}end end;local function K(A,B,C,D)local G={}for l=A,C do if d.get_length_of_line(l)==0 then table.insert(G,l)if A==l then A=l+1;B=1 end end end;return A,B,G end;local function L(y)if not y:is_visual_area_valid()or y.visual_start_lnum==y.lnum and y.visual_start_col==y.col then J(y)return end;y.visual_start_mark_id=k(y.visual_start_lnum,y.visual_start_col,y.visual_start_mark_id,"",0)local A,B,C,D=y:get_normalised_visual_area(true)local A,B,G=K(A,B,C,D)y.visual_multiline_mark_id=z(y.visual_multiline_mark_id,A,B,C,D)E(y.visual_empty_line_mark_ids,G)end;function a.delete_virtual_cursor_extmarks(y)if y.mark_id~=0 then vim.api.nvim_buf_del_extmark(0,e,y.mark_id)y.mark_id=0 end;J(y)end;function a.update_virtual_cursor_extmarks(y)x(y)L(y)end;function a.update_virtual_cursor_position(y)if y.mark_id~=0 then local v=vim.api.nvim_buf_get_extmark_by_id(0,e,y.mark_id,{})if next(v)~=nil then y.lnum=v[1]+1;y.col=v[2]+1;if y.curswant<vim.v.maxcol and y.col<d.get_max_col(y.lnum)then y.curswant=y.col end else y.delete=true end end;if y.delete then return end;if y.visual_start_mark_id~=0 then local v=vim.api.nvim_buf_get_extmark_by_id(0,e,y.visual_start_mark_id,{})if next(v)~=nil then y.visual_start_lnum=v[1]+1;y.visual_start_col=v[2]+1 else y.delete=true end end end;function a.save_visual_area()local M,N,l,m=d.get_visual_area()i=k(M,N,i,"",0)j=k(l,m,j,"",0)end;function a.restore_visual_area()if i~=nil and j~=nil then local O=vim.api.nvim_buf_get_extmark_by_id(0,e,i,{})local P=vim.api.nvim_buf_get_extmark_by_id(0,e,j,{})vim.api.nvim_buf_del_extmark(0,e,i)vim.api.nvim_buf_del_extmark(0,e,j)i=nil;j=nil;if next(O)~=nil and next(P)~=nil then d.set_visual_area(O[1]+1,O[2]+1,P[1]+1,P[2]+1)end end end;return a
