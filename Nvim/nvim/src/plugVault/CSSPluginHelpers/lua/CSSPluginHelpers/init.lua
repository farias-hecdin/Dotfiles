local a={}local vim=vim;a.setup=function(b)end;local c=function(d)return vim.api.nvim_buf_get_lines(0,d-1,d,false)[1]end;local e=function(f)local g=vim.api.nvim_buf_get_mark(0,f)return{g[1],g[2]+1}end;local h=function(i)local j=string.byte(c(i[1]):sub(i[2],i[2]))if not j then return i end;while j>=0x80 and j<0xc0 do i[2]=i[2]-1;j=string.byte(c(i[1]):sub(i[2],i[2]))end;return i end;local k=function(i)if not i then return nil end;local j=string.byte(c(i[1]):sub(i[2],i[2]))if not j then return i end;if j>=0xf0 then i[2]=i[2]+3 elseif j>=0xe0 then i[2]=i[2]+2 elseif j>=0xc0 then i[2]=i[2]+1 end;return i end;local l=function(m)local n,o=m.first_pos,m.last_pos;o[2]=math.min(o[2],#c(o[1]))return vim.api.nvim_buf_get_text(0,n[1]-1,n[2]-1,o[1]-1,o[2],{})end;a.capture_visual_selection=function()local p=h(e('<'))local q=k(e('>'))if p==nil or q==nil then return end;if vim.fn.visualmode()=='V'then q[2]=#c(q[1])end;local m={first_pos=p,last_pos=q}local r=l(m)return m,r end;a.change_text=function(m,r)if not m then return end;local n,o=m.first_pos,m.last_pos;vim.api.nvim_buf_set_text(0,n[1]-1,n[2]-1,o[1]-1,o[2],r)end;a.find_file=function(s,t,u,v)if not u or u>v then return end;t=t or""local w=io.popen("ls -1 "..t)if not w then return false end;for x in w:lines()do if x==s then w:close()if u==1 then return t..s end;return t.."/"..s end end;w:close()t=t.."../"return a.find_file(s,t,u+1,v)end;a.open_file=function(y)local x=io.open(y,"r")if not x then return end;local z={}for A in x:lines()do table.insert(z,A)end;x:close()return z end;a.extract_from_file=function(B,C)local D={}for E,A in ipairs(B)do for F in string.gmatch(A,C)do table.insert(D,F)end end;return D end;local G=function(F)local H=F:match("[-_%w]*[^:]+")local I=F:match("%:([^;]+)")I=I:gsub("^%s+",""):gsub("%s+$","")return H,I end;a.get_css_attribute=function(y,J)local B=a.open_file(y)local D=a.extract_from_file(B,"[-_%w]+%:[^;]+")local K={}for E,F in ipairs(D)do local H,I=G(F)if H:match(J)then K[H]=I end end;return K end;a.get_current_line_content=function()local A=vim.api.nvim_win_get_cursor(0)[1]local L=vim.api.nvim_buf_get_lines(0,A-1,A,false)[1]return A,L end;a.show_virtual_text=function(M,N,O,P)local Q=vim.api.nvim_buf_get_extmark_by_id(0,O,O,{})if Q~=nil then vim.api.nvim_buf_del_extmark(0,O,O)end;if#M>0 then vim.api.nvim_buf_set_extmark(0,tonumber(O),N-1,0,{virt_text={{table.concat(M," "),P or"Comment"}},id=O,priority=100})end end;return a
