local a=require("which-key.util")local b={}b.__index=b;b.ns=vim.api.nvim_create_namespace("wk.text")function b.new(c)local self=setmetatable({},b)self._lines={}self._col=0;self._opts=c or{}self._indents={}for d=0,100,1 do self._indents[d]=(" "):rep(d)end;return self end;function b:height()return#self._lines end;function b:width()local e=0;for f,g in ipairs(self._lines)do local h=0;for f,i in ipairs(g)do h=h+vim.fn.strdisplaywidth(i.str)end;e=math.max(e,h)end;return e end;function b:append(j,c)c=c or{}if#self._lines==0 then self:nl()end;if type(j)=="table"then for f,k in ipairs(j)do k.width=k.width or#k.str;self._col=self._col+k.width;table.insert(self._lines[#self._lines],k)end;return self end;c=type(c)=="string"and{hl=c}or c;for l,g in ipairs(vim.split(j,"\n",{plain=true}))do local e=#g;self._col=self._col+e;table.insert(self._lines[#self._lines],{str=g,width=e,hl=c.hl,line=c.line or l})end;return self end;function b:nl()table.insert(self._lines,{})self._col=0;return self end;function b:statusline(c)local m=c and c.sep or" "local n={}for f,g in ipairs(self._lines)do local o={}for f,i in ipairs(g)do local p=i.str:gsub("%%","%%%%")if i.hl then p=("%%#%s#%s%%*"):format(i.hl,p)end;o[#o+1]=p end;table.insert(n,table.concat(o,""))end;return table.concat(n,m)end;function b:render(q)local n={}for f,g in ipairs(self._lines)do local o={}for f,i in ipairs(g)do o[#o+1]=i.str end;table.insert(n,table.concat(o,""))end;vim.bo[q].modifiable=true;vim.api.nvim_buf_clear_namespace(q,b.ns,0,-1)vim.api.nvim_buf_set_lines(q,0,-1,false,n)for l,g in ipairs(self._lines)do local r=0;local s=l-1;for f,i in ipairs(g)do local e=i.width;if i.hl then a.set_extmark(q,b.ns,s,r,{hl_group=i.hl,end_col=r+e})end;r=r+e end end;vim.bo[q].modifiable=false end;function b:trim()while#self._lines>0 and#self._lines[#self._lines]==0 do table.remove(self._lines)end end;function b:row()return#self._lines==0 and 1 or#self._lines end;function b:col(c)if c and c.display then local t=0;for f,i in ipairs(self._lines[#self._lines]or{})do t=t+vim.fn.strdisplaywidth(i.str)end;return t end;return self._col end;return b
