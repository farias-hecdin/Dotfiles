local a={}a.name="marks"a.actions={{trigger="`",mode="n"},{trigger="'",mode="n"},{trigger="g`",mode="n"},{trigger="g'",mode="n"}}local b={["^"]="Last position of cursor in insert mode",["."]="Last change in current buffer",['"']="Last exited current buffer",["0"]="In last file edited",["'"]="Back to line in current buffer where jumped from",["`"]="Back to position in current buffer where jumped from",["["]="To beginning of previously changed or yanked text",["]"]="To end of previously changed or yanked text",["<lt>"]="To beginning of last visual selection",[">"]="To end of last visual selection"}a.cols={{key="lnum",hl="Number",align="right"}}function a.expand()local c=vim.api.nvim_get_current_buf()local d={}local e={}vim.list_extend(e,vim.fn.getmarklist(c))vim.list_extend(e,vim.fn.getmarklist())for f,g in pairs(e)do local h=g.mark:sub(2,2)local i=g.pos[2]local j;if g.pos[1]and g.pos[1]~=0 then j=vim.api.nvim_buf_get_lines(g.pos[1],i-1,i,false)[1]end;local k=g.file and vim.fn.fnamemodify(g.file,":p:~:.")table.insert(d,{key=h,desc=b[h]or k and"file: "..k or"",value=vim.trim(j or k or""),highlights={{1,5,"Number"}},lnum=i})end;return d end;return a
