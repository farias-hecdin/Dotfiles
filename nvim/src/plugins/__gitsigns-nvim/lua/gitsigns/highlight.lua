local a=vim.api;local b=require("gitsigns.debug").dprintf;local c={}local d={{GitSignsAdd={'GitGutterAdd','SignifySignAdd','DiffAddedGutter','diffAdded','DiffAdd'}},{GitSignsChange={'GitGutterChange','SignifySignChange','DiffModifiedGutter','diffChanged','DiffChange'}},{GitSignsDelete={'GitGutterDelete','SignifySignDelete','DiffRemovedGutter','diffRemoved','DiffDelete'}},{GitSignsAddNr={'GitGutterAddLineNr','GitSignsAdd'}},{GitSignsChangeNr={'GitGutterChangeLineNr','GitSignsChange'}},{GitSignsDeleteNr={'GitGutterDeleteLineNr','GitSignsDelete'}},{GitSignsAddLn={'GitGutterAddLine','SignifyLineAdd','DiffAdd'}},{GitSignsChangeLn={'GitGutterChangeLine','SignifyLineChange','DiffChange'}},{GitSignsAddPreview={'GitGutterAddLine','SignifyLineAdd','DiffAdd'}},{GitSignsDeletePreview={'GitGutterDeleteLine','SignifyLineDelete','DiffDelete'}},{GitSignsCurrentLineBlame={'NonText'}},{GitSignsAddInline={'TermCursor'}},{GitSignsDeleteInline={'TermCursor'}},{GitSignsChangeInline={'TermCursor'}},{GitSignsAddLnInline={'GitSignsAddInline'}},{GitSignsChangeLnInline={'GitSignsChangeInline'}},{GitSignsDeleteLnInline={'GitSignsDeleteInline'}},{GitSignsAddLnVirtLn={'GitSignsAddLn'}},{GitSignsChangeVirtLn={'GitSignsChangeLn'}},{GitSignsDeleteVirtLn={'GitGutterDeleteLine','SignifyLineDelete','DiffDelete'}},{GitSignsAddLnVirtLnInLine={'GitSignsAddLnInline'}},{GitSignsChangeVirtLnInLine={'GitSignsChangeLnInline'}},{GitSignsDeleteVirtLnInLine={'GitSignsDeleteLnInline'}}}local function e(f)local g,h=pcall(a.nvim_get_hl_by_name,f,true)local i=h.foreground or h.background or h.reverse;return g and i~=nil end;c.setup_highlights=function()for j,k in ipairs(d)do for h,l in pairs(k)do if e(h)then b('Highlight %s is already defined',h)else for j,m in ipairs(l)do if e(m)then b('Deriving %s from %s',h,m)a.nvim_set_hl(0,h,{default=true,link=m})break end end end end end end;return c
