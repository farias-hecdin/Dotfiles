local a=require("gitsigns.hunks").create_hunk;local b=require('gitsigns.hunks').Hunk;local c=require('gitsigns.config').config;local d=require('gitsigns.async')local e={}local f=function(g,h,i,j,k)local l=vim.tbl_isempty(g)and''or table.concat(g,'\n')..'\n'local m=vim.tbl_isempty(h)and''or table.concat(h,'\n')..'\n'return vim.diff(l,m,{result_type='indices',algorithm=i,indent_heuristic=j,linematch=k})end;local n=d.wrap(function(g,h,i,j,k,o)local l=vim.tbl_isempty(g)and''or table.concat(g,'\n')..'\n'local m=vim.tbl_isempty(h)and''or table.concat(h,'\n')..'\n'vim.loop.new_work(function(p,q,r,s,t)return vim.mpack.encode(vim.diff(p,q,{result_type='indices',algorithm=r,indent_heuristic=s,linematch=t}))end,function(u)o(vim.mpack.decode(u))end):queue(l,m,i,j,k)end,6)if not vim.diff then f=require('gitsigns.diff_int.xdl_diff_ffi')end;e.run_diff=d.void(function(g,h,v,j,k)local w;if c._threaded_diff and vim.is_thread then w=n else w=f end;local x=w(g,h,v,j,k)local y={}for z,u in ipairs(x)do local A,B,C,D=unpack(u)local E=a(A,B,C,D)if B>0 then for F=A,A+B-1 do E.removed.lines[#E.removed.lines+1]=g[F]or''end end;if D>0 then for F=C,C+D-1 do E.added.lines[#E.added.lines+1]=h[F]or''end end;y[#y+1]=E end;return y end)local G=5;local function H(y)local I={y[1]}for J=2,#y do local K,L=I[#I],y[J]if not K or not L then break end;if L.added.start-K.added.start-K.added.count<G then K.added.count=L.added.start+L.added.count-K.added.start;K.removed.count=L.removed.start+L.removed.count-K.removed.start;if K.added.count>0 or K.removed.count>0 then K.type='change'end else I[#I+1]=L end end;return I end;function e.run_word_diff(M,N)local O={}local P={}if#M~=#N then return P,O end;for F=1,#M do local l,m=vim.split(M[F],''),vim.split(N[F],'')local y={}for z,u in ipairs(f(l,m))do local A,B,C,D=unpack(u)if B==0 then A=A+1 end;if D==0 then C=C+1 end;y[#y+1]=a(A,B,C,D)end;y=H(y)for z,K in ipairs(y)do O[#O+1]={F,K.type,K.added.start,K.added.start+K.added.count}P[#P+1]={F,K.type,K.removed.start,K.removed.start+K.removed.count}end end;return P,O end;return e
