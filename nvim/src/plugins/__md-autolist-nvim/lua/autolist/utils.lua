local a="%d+"local b="%l"local c="^%s*("local d=").*$"local e=vim.fn;local f=require("autolist.numbers")local g={}local function h(i)if i>string.byte("z")then return string.byte("a")elseif i<string.byte("a")then return string.byte("z")end;return i end;local function j(k,l)return string.char(h(k:byte()+l))end;local function m(n,l)local o=tonumber(n)if o then return tostring(o+l)end;return nil end;local function p(q)return string.char(q+string.byte("a")-1)end;local function r(s,t,u,v,w)local x=s:gsub("^%s*(%d+)[.)].*$","%1",1)local k=s:gsub("^%s*(%l)[.)].*$","%1",1)local y=s:gsub("^%s*(%u*)[.)].*$","%1",1)if x and x~=s then return t(x)elseif k and k~=s then return u(k)elseif y and y~=s then return v(y)else return w end end;local function z(k)local A=k:byte()return k:byte()-string.byte("a")+1 end;function g.set_line_marker(B,C,D,E)local F=e.getline(B)F=F:gsub("%s*$","",1)F=F:gsub("^(%s*)"..g.get_marker_pat(F,D).."%s*","%1"..(C or"").." ",1)if E then F=F.." "end;e.setline(B,F)g.reset_cursor_column(e.col("$"))end;function g.set_ordered_value(F,G)local function H()return F:gsub("^(%s*)%d+","%1"..G,1)end;local function I()return F:gsub("^(%s*)%l","%1"..p(G),1)end;local function J()return F:gsub("^(%s*)%u*","%1"..f.arabic2roman(G),1)end;return r(F,H,I,J,F)end;function g.reset_cursor_column(K)if not K then K=1 end;local L=e.getpos(".")L[3]=K;e.setpos(".",L)end;function g.set_current_line(M)e.setline(".",M)local L=e.getpos(".")L[3]=e.col("$")e.setpos(".",L)end;function g.set_line_number(o)local L=e.getpos(".")L[2]=o;e.setpos(".",L)end;function g.get_indent_lvl(s)return#s:match("^%s*")end;function g.get_marker(F,D)return select(3,g.is_list(F,D))end;function g.get_marker_pat(F,D)return select(2,g.is_list(F,D))end;function g.get_whitespace_trimmed(n)return n:gsub("%s*$","",1)end;function g.get_percent_filtered(N)return N:gsub("%%","")end;function g.get_value_ordered(s)return r(s,tonumber,z,f.roman2arabic,0)end;function g.get_ordered_add(s,l)if not l then l=1 end;local function H(x)return s:gsub(x,m(x,l),1)end;local function I(k)return s:gsub(k,j(k,l),1)end;local function J(y)return s:gsub(y,f.roman_add(y,l),1)end;return r(s,H,I,J,s)end;function g.get_list_start(O,D)if not O then O=e.line(".")end;local B=O;local F=e.getline(B)local P=g.get_indent_lvl(F)if P<0 then P=0 end;if D then while g.is_list(F,D)and g.get_indent_lvl(F)>=P do B=B-1;F=e.getline(B)end else while g.is_ordered(F)and g.get_indent_lvl(F)>=P or g.get_indent_lvl(F)>P do B=B-1;F=e.getline(B)end end;F=e.getline(B+1)if g.is_list(F,D)then return B+1 end;return nil end;function g.is_list(s,D,Q)if not D then return g.is_ordered(s)end;if Q then Q="%s"else Q=""end;if s:find('^%s*$')then return false end;for R,N in ipairs(D)do local S,T=s:gsub(c..N..Q..d,"%1",1)if T>0 then return true,N,S end end;return false end;function g.is_ordered(s,U)local V;if U and U>0 then V=g.get_ordered_add(s,1)else V=g.get_ordered_add(s,-1)end;if V~=s then return V end;return nil end;return g
