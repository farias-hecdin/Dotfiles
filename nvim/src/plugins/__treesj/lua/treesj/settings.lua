local a=require('treesj.langs')local b=require('treesj.langs.utils')local c={}local d={use_default_keymaps=true,check_syntax_error=true,max_join_length=120,cursor_behavior='hold',notify=true,langs=b._prepare_presets(a.presets),dot_repeat=true}local e={{name='TSJToggle',desc='Split or Join code block with autodetect',func='toggle',keys='<space>m',mode='n'},{name='TSJSplit',desc='Split code block',func='split',keys='<space>s',mode='n'},{name='TSJJoin',desc='Join code block',func='join',keys='<space>j',mode='n'}}c.settings=d;local function f(g,h)h=h or{}if h.langs then for i,j in pairs(h.langs)do for k,l in pairs(j)do j[k]=b._premerge(l)end;h.langs[i]=j end end;local m=vim.tbl_deep_extend('force',g,h)m.langs=b._prepare_presets(m.langs)m.langs=b._skip_disabled(m.langs)return m end;c._create_commands=function()local n=require('treesj')for o,p in ipairs(e)do vim.api.nvim_create_user_command(p.name,n[p.func],{desc=p.desc})end end;c._set_default_keymaps=function()if c.settings and c.settings.use_default_keymaps then local n=require('treesj')for o,p in ipairs(e)do vim.keymap.set(p.mode,p.keys,n[p.func],{desc=p.desc})end end end;c._update_settings=function(h)c.settings=f(c.settings,h)end;return c
