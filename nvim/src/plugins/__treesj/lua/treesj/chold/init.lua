local a=require('treesj.settings').settings;local b=require('treesj.utils')local c=require('treesj.chold.utils')local d='join'local e='split'local f={}f.__index=f;function f.new()local g=c.get_cursor()return setmetatable({pos=g,_new_pos={col=g.col,row=g.row+1},_done=false},f)end;function f:update(h,i)if not self:is_done()then if a.cursor_behavior=='start'then self:_calc_for_start(h)elseif a.cursor_behavior=='end'then self:_calc_for_end(h,i)elseif c.is_not_need_change(self,h)then self:done()elseif c.is_after_node(self,h)then self:_calc_when_after(h,i)else if i==d then self:_calc_for_join(h)else self:_calc_for_split(h)end end end end;function f:compute(h,i)for j in h:iter_children()do self:update(j,i)end end;function f:_calc_for_start(h)local k=b.readable_range(h:root():range())self:_update_pos({row=k.row.start+1,col=k.col.start})self:done()end;function f:_calc_for_end(h,i)if h:is_last()then local l=h:root():get_lines()if i==e then self:_update_pos({row=self._new_pos.row+#l-1,col=#l[#l]-1})self:done()else local k=b.readable_range(h:root():range())self:_update_pos({col=k.col.start+#l[1]-1,row=k.row.start+1})self:done()end end end;function f:_calc_when_after(h,i)if h:is_last()then local k=b.readable_range(h:root():range())local m=self.pos.col-k.col.end_;local l=h:root():get_lines()if i==e then self:_update_pos({row=self._new_pos.row+#l-1,col=#l[#l]+m})self:done()else self:_update_pos({col=k.col.start+#l[1]+m,row=k.row.start+1})self:done()end end end;function f:_calc_for_join(h)local k=b.readable_range(h:root():child(1):range())if c.in_node_range(self,h)then self:_update_pos({row=k.row.start+1,col=self._new_pos.col+c.new_col_pos(self,h,d)})self:done()return end;local n=#h:text()local o=h:is_first()and k.col.start+n or self._new_pos.col+n;self:_update_pos({col=o})end;function f:_calc_for_split(h)c.increase_row(self,h)if c.in_node_range(self,h)then local k=b.readable_range(h:root():range())if not(self._new_pos.row-1==k.row.start)then self:_update_pos({col=c.new_col_pos(self,h,e)})self:done()else self:done()end end end;function f:is_done()return self._done end;function f:done()self._done=true end;function f:_update_pos(g)self._new_pos=vim.tbl_deep_extend('force',self._new_pos,g)end;function f:get_cursor()return{self._new_pos.row,self._new_pos.col}end;return f
