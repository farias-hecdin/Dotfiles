local a={}a.name="marks"a.actions={{trigger="`",mode="n"},{trigger="'",mode="n"},{trigger="g`",mode="n"},{trigger="g'",mode="n"}}function a.setup(b,c,d)for e,f in ipairs(a.actions)do table.insert(d.triggers_nowait,f.trigger)end end;local g={["^"]="Last position of cursor in insert mode",["."]="Last change in current buffer",['"']="Last exited current buffer",["0"]="In last file edited",["'"]="Back to line in current buffer where jumped from",["`"]="Back to position in current buffer where jumped from",["["]="To beginning of previously changed or yanked text",["]"]="To end of previously changed or yanked text",["<lt>"]="To beginning of last visual selection",[">"]="To end of last visual selection"}function a.run(h,i,j)local k={}local l={}for e,m in pairs(vim.fn.getmarklist(j))do table.insert(l,m)end;for e,m in pairs(vim.fn.getmarklist())do table.insert(l,m)end;for e,m in pairs(l)do local n=m.mark:sub(2,2)if n=="<"then n="<lt>"end;local o=m.pos[2]local p;if m.pos[1]and m.pos[1]~=0 then local q=vim.fn.getbufline(m.pos[1],o)if q and q[1]then p=q[1]end end;local r=m.file and vim.fn.fnamemodify(m.file,":p:.")local s=string.format("%4d  ",o)table.insert(k,{key=n,label=g[n]or"",value=s..(p or r or""),highlights={{1,#s-1,"Number"}}})end;return k end;return a
