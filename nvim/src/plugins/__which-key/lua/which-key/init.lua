local a=require("which-key.keys")local b=require("which-key.util")local c={}local d=false;local e=false;local function f()if e then return end;e=true;if vim.v.vim_did_enter==0 then vim.cmd([[au VimEnter * ++once lua require("which-key").load()]])else c.load()end end;function c.setup(g)require("which-key.config").setup(g)f()end;function c.execute(h)local i=a.functions[h]return i()end;function c.show(j,k)k=k or{}if type(k)=="string"then k={mode=k}end;j=j or""k.mode=k.mode or b.get_mode()local l=vim.api.nvim_get_current_buf()a.get_tree(k.mode)a.get_tree(k.mode,l)a.update(l)require("which-key.view").open(j,k)end;function c.show_command(j,m)j=j or""j=(j=='""'or j=="''")and""or j;m=(m=='""'or m=="''")and""or m;m=m or"n"j=b.t(j)if not b.check_mode(m)then b.error("Invalid mode passed to :WhichKey (Don't create any keymappings to trigger WhichKey. WhichKey does this automatically)")else c.show(j,{mode=m})end end;local n={}function c.register(o,k)f()if d then a.register(o,k)a.update()else table.insert(n,{o,k})end end;function c.load()if d then return end;require("which-key.plugins").setup()require("which-key.colors").setup()a.register({},{prefix="<leader>",mode="n"})a.register({},{prefix="<leader>",mode="v"})a.setup()for p,q in pairs(n)do local k=q[2]or{}k.update=false;a.register(q[1],k)end;a.update()n={}d=true end;function c.reset()require("plenary.reload").reload_module("which-key")require("which-key").setup()end;return c
