local a=require("md_section_number.parser")local b=require("md_section_number.replacer")local c={}local d={max_level=4,ignore_pairs={{"```","```"},{"\\~\\~\\~","\\~\\~\\~"},{"<!--","-->"}}}local function e(f)return vim.tbl_deep_extend("force",d,f or{})end;local function g(h,i,j)if h==-1 or i==-1 then return true end;if h==nil or i==nil then return true end;return h<=j and j<=i end;function c.setup(f)local k=e(f)a.setup(k)b.setup(k)end;local function l(...)local m=a.get_heading_lines(vim.api.nvim_buf_get_lines(0,0,-1,false))local n={}if select("#",...)==3 then local h,i,o=...for p,q in ipairs(m)do if g(h,i,q[1]+1)then table.insert(n,b.change_heading_level(q,o))else table.insert(n,q)end end else n=m end;return m,n end;function c._update_heading_number(r,h,i,...)local m,n=l(h,i,...)n=b.insert_heading_number(n)if nil==n or#n==0 then return end;for p,q in ipairs(n)do local s=q[1]local t=q[2]local u=m[p][2]local v=q[3]local w=q[4]local x=b.replaceHeadingNumber(t,w,v,r)if u~=x and g(h,i,s+1)then b.update_line(s,string.len(u),x)end end end;function c.update_heading_number(y,z)c._update_heading_number(false,y,z)end;function c.clear_heading_number(y,z)c._update_heading_number(true,y,z)end;function c.header_decrease(y,z)c._update_heading_number(true,y,z,-1)end;function c.header_increase(y,z)c._update_heading_number(true,y,z,1)end;return c
