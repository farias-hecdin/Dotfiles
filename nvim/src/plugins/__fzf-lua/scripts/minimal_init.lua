if vim.api.nvim_call_function("has",{"nvim-0.5"})~=1 then vim.api.nvim_command('echohl WarningMsg | echom "Fzf-lua requires neovim > v0.5 | echohl None"')return end;local a,b=pcall(require,"packer")local c="/site/pack/packer/%s/packer.nvim"local d=vim.fn.stdpath("data")..string.format(c,"opt")local e=vim.loop.fs_stat(d)~=nil;if not a and e then vim.cmd("packadd packer.nvim")a,b=pcall(require,"packer")end;if not a then print("Downloading packer.nvim...\n")vim.fn.system({"git","clone","--depth","1","https://github.com/wbthomason/packer.nvim",d})vim.cmd("packadd packer.nvim")a,b=pcall(require,"packer")if a then vim.fn.delete(b.config.compile_path,"rf")print("Successfully installed packer.nvim.")else print(("Error installing packer.nvim\nPath: %s"):format(d))return end end;b.startup({function(f)f{"wbthomason/packer.nvim",opt=true}f{"ibhagwan/fzf-lua",setup=[[ vim.api.nvim_set_keymap('n', '<C-p>',
        '<Cmd>lua require"fzf-lua".files()<CR>', {}) ]],config='require"fzf-lua".setup({})',event="VimEnter",opt=true}end,config={auto_clean=false}})b.on_compile_done=function()b.loader("fzf-lua")end;if not vim.loop.fs_stat(b.config.compile_path)then b.sync()else b.compile()end
