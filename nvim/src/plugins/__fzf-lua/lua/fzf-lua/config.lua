local a=require"fzf-lua.path"local b=require"fzf-lua.utils"local c=require"fzf-lua.actions"local d=require"fzf-lua.previewer"local e={}e._has_devicons,e._devicons=pcall(require,"nvim-web-devicons")e._devicons_path=e._has_devicons and e._devicons and e._devicons.setup and debug.getinfo(e._devicons.setup,"S").source:gsub("^@","")function e._default_previewer_fn()return e.globals.default_previewer or e.globals.winopts.preview.default end;e.__resume_data={}e.globals={nbsp=b.nbsp,global_resume=true,global_resume_query=true,winopts={height=0.85,width=0.80,row=0.35,col=0.55,border="rounded",fullscreen=false,preview={default="builtin",border="border",wrap="nowrap",hidden="nohidden",vertical="down:45%",horizontal="right:60%",layout="flex",flip_columns=120,title=true,title_align="left",scrollbar="border",scrolloff="-2",scrollchar="",scrollchars={"█",""},delay=100,winopts={number=true,relativenumber=false,cursorline=true,cursorlineopt="both",cursorcolumn=false,signcolumn="no",list=false,foldenable=false,foldmethod="manual",scrolloff=1}},_borderchars={["none"]={" "," "," "," "," "," "," "," "},["single"]={"┌","─","┐","│","┘","─","└","│"},["double"]={"╔","═","╗","║","╝","═","╚","║"},["rounded"]={"╭","─","╮","│","╯","─","╰","│"},["thicc"]={"┏","━","┓","┃","┛","━","┗","┃"}},on_create=function()end},keymap={builtin={["<F1>"]="toggle-help",["<F2>"]="toggle-fullscreen",["<F3>"]="toggle-preview-wrap",["<F4>"]="toggle-preview",["<F5>"]="toggle-preview-ccw",["<F6>"]="toggle-preview-cw",["<S-down>"]="preview-page-down",["<S-up>"]="preview-page-up",["<S-left>"]="preview-page-reset"},fzf={["ctrl-z"]="abort",["ctrl-u"]="unix-line-discard",["ctrl-f"]="half-page-down",["ctrl-b"]="half-page-up",["ctrl-a"]="beginning-of-line",["ctrl-e"]="end-of-line",["alt-a"]="toggle-all",["f3"]="toggle-preview-wrap",["f4"]="toggle-preview",["shift-down"]="preview-page-down",["shift-up"]="preview-page-up"}},actions={files={["default"]=c.file_edit_or_qf,["ctrl-s"]=c.file_split,["ctrl-v"]=c.file_vsplit,["ctrl-t"]=c.file_tabedit,["alt-q"]=c.file_sel_to_qf,["alt-l"]=c.file_sel_to_ll},buffers={["default"]=c.buf_edit,["ctrl-s"]=c.buf_split,["ctrl-v"]=c.buf_vsplit,["ctrl-t"]=c.buf_tabedit}},fzf_bin=nil,fzf_opts={["--ansi"]="",["--info"]="inline",["--height"]="100%",["--layout"]="reverse",["--border"]="none"},previewers={cat={cmd="cat",args="--number",_ctor=d.fzf.cmd},bat={cmd="bat",args="--italic-text=always --style=numbers,changes --color always",theme=nil,config=nil,_ctor=d.fzf.bat},bat_native={cmd="bat",args="--italic-text=always --style=numbers,changes --color always",_ctor=d.fzf.bat},bat_async={cmd="bat",args="--italic-text=always --style=numbers,changes --color always",_ctor=d.fzf.bat_async},head={cmd="head",args=nil,_ctor=d.fzf.head},git_diff={cmd_deleted="git diff --color HEAD --",cmd_modified="git diff --color HEAD",cmd_untracked="git diff --color --no-index /dev/null",_fn_git_icons=function()return e.globals.git.icons end,_ctor=d.fzf.git_diff},man={cmd="man -c %s | col -bx",_ctor=d.builtin.man_pages},man_native={cmd="man",_ctor=d.fzf.man_pages},help_tags={split="botright",_ctor=d.builtin.help_tags},help_file={_ctor=d.builtin.help_file},builtin={syntax=true,syntax_delay=0,syntax_limit_l=0,syntax_limit_b=1024*1024,limit_b=1024*1024*10,ueberzug_scaler="cover",_ctor=d.builtin.buffer_or_file}}}e.globals.files={previewer=e._default_previewer_fn,prompt="> ",cmd=nil,multiprocess=true,file_icons=true and e._has_devicons,color_icons=true,git_icons=true,git_status_cmd={"git","status","-s"},find_opts=[[-type f -not -path '*/\.git/*' -printf '%P\n']],rg_opts="--color=never --files --hidden --follow -g '!.git'",fd_opts="--color=never --type f --hidden --follow --exclude .git",_actions=function()return e.globals.actions.files end}e.globals.git={files={previewer=e._default_previewer_fn,prompt="GitFiles> ",cmd="git ls-files --exclude-standard",multiprocess=true,file_icons=true and e._has_devicons,color_icons=true,git_icons=true,_actions=function()return e.globals.actions.files end},status={prompt="GitStatus> ",cmd="git status -s",previewer="git_diff",file_icons=true and e._has_devicons,color_icons=true,git_icons=true,_actions=function()return e.globals.actions.files end,actions={["right"]={c.git_unstage,c.resume},["left"]={c.git_stage,c.resume}}},commits={prompt="Commits> ",cmd="git log --color --pretty=format:'%C(yellow)%h%Creset %Cgreen(%><(12)%cr%><|(12))".."%Creset %s %C(blue)<%an>%Creset'",preview="git show --pretty='%Cred%H%n%Cblue%an <%ae>%n%C(yellow)%cD%n%Cgreen%s' --color {1}",actions={["default"]=c.git_checkout}},bcommits={prompt="BCommits> ",cmd="git log --color --pretty=format:'%C(yellow)%h%Creset %Cgreen(%><(12)%cr%><|(12))".."%Creset %s %C(blue)<%an>%Creset' <file>",preview="git diff --color {1}~1 {1} -- <file>",actions={["default"]=c.git_buf_edit,["ctrl-s"]=c.git_buf_split,["ctrl-v"]=c.git_buf_vsplit,["ctrl-t"]=c.git_buf_tabedit}},branches={prompt="Branches> ",cmd="git branch --all --color",preview="git log --graph --pretty=oneline --abbrev-commit --color {1}",actions={["default"]=c.git_switch}},stash={prompt="Stash> ",cmd="git --no-pager stash list",preview="git --no-pager stash show --patch --color {1}",actions={["default"]=c.git_stash_apply,["ctrl-x"]={c.git_stash_drop,c.resume}},fzf_opts={["--no-multi"]="",["--delimiter"]="'[:]'"}},icons={["M"]={icon="M",color="yellow"},["D"]={icon="D",color="red"},["A"]={icon="A",color="green"},["R"]={icon="R",color="yellow"},["C"]={icon="C",color="yellow"},["T"]={icon="T",color="magenta"},["?"]={icon="?",color="magenta"}}}e.globals.grep={previewer=e._default_previewer_fn,prompt="Rg> ",input_prompt="Grep For> ",cmd=nil,multiprocess=true,file_icons=true and e._has_devicons,color_icons=true,git_icons=true,grep_opts="--binary-files=without-match --line-number --recursive --color=auto ".."--perl-regexp",rg_opts="--column --line-number --no-heading --color=always --smart-case ".."--max-columns=4096",_actions=function()return e.globals.actions.files end,actions={["ctrl-g"]={c.grep_lgrep}},glob_flag="--iglob",glob_separator="%s%-%-"}e.globals.args={previewer=e._default_previewer_fn,prompt="Args> ",files_only=true,file_icons=true and e._has_devicons,color_icons=true,git_icons=true,_actions=function()return e.globals.actions.files end,actions={["ctrl-x"]={c.arg_del,c.resume}}}e.globals.oldfiles={previewer=e._default_previewer_fn,prompt="History> ",file_icons=true and e._has_devicons,color_icons=true,git_icons=false,stat_file=true,_actions=function()return e.globals.actions.files end}e.globals.quickfix={previewer=e._default_previewer_fn,prompt="Quickfix> ",separator="▏",file_icons=true and e._has_devicons,color_icons=true,git_icons=false,_actions=function()return e.globals.actions.files end}e.globals.loclist={previewer=e._default_previewer_fn,prompt="Locations> ",separator="▏",file_icons=true and e._has_devicons,color_icons=true,git_icons=false,_actions=function()return e.globals.actions.files end}e.globals.buffers={previewer=e._default_previewer_fn,prompt="Buffers> ",file_icons=true and e._has_devicons,color_icons=true,sort_lastused=true,show_all_buffers=true,ignore_current_buffer=false,cwd_only=false,_actions=function()return e.globals.actions.buffers end,actions={["ctrl-x"]={c.buf_del,c.resume}}}e.globals.tabs={previewer=e._default_previewer_fn,prompt="Tabs> ",tab_title="Tab",tab_marker="<<",file_icons=true and e._has_devicons,color_icons=true,_actions=function()return e.globals.actions.buffers end,actions={["default"]=c.buf_switch,["ctrl-x"]={c.buf_del,c.resume}},fzf_opts={["--delimiter"]="'[\\):]'",["--with-nth"]="2.."}}e.globals.lines={previewer=e._default_previewer_fn,prompt="Lines> ",file_icons=true and e._has_devicons,color_icons=true,show_unlisted=false,no_term_buffers=true,fzf_opts={["--delimiter"]="'[\\]:]'",["--nth"]="2..",["--tiebreak"]="index",["--tabstop"]="1"},_actions=function()return e.globals.actions.buffers end,actions={["default"]=c.buf_edit_or_qf,["alt-q"]=c.buf_sel_to_qf,["alt-l"]=c.buf_sel_to_ll}}e.globals.blines={previewer=e._default_previewer_fn,prompt="BLines> ",file_icons=true and e._has_devicons,color_icons=true,show_unlisted=true,no_term_buffers=false,fzf_opts={["--delimiter"]="'[:]'",["--with-nth"]="2..",["--tiebreak"]="index",["--tabstop"]="1"},_actions=function()return e.globals.actions.buffers end,actions={["default"]=c.buf_edit_or_qf,["alt-q"]=c.buf_sel_to_qf,["alt-l"]=c.buf_sel_to_ll}}e.globals.tags={previewer={_ctor=d.builtin.tags},prompt="Tags> ",ctags_file="tags",rg_opts="--no-heading --color=always --smart-case",grep_opts="--color=auto --perl-regexp",multiprocess=true,file_icons=true and e._has_devicons,git_icons=true,color_icons=true,_actions=function()return e.globals.actions.files end,actions={["ctrl-g"]={c.grep_lgrep}}}e.globals.btags={previewer={_ctor=d.builtin.tags},prompt="BTags> ",ctags_file="tags",rg_opts="--no-heading --color=always",grep_opts="--color=auto --perl-regexp",multiprocess=true,file_icons=true and e._has_devicons,git_icons=true,color_icons=true,fzf_opts={["--delimiter"]="'[:]'",["--with-nth"]="2..",["--tiebreak"]="index"},_actions=function()return e.globals.actions.files end,actions={["ctrl-g"]=false}}e.globals.colorschemes={prompt="Colorschemes> ",live_preview=true,actions={["default"]=c.colorscheme},winopts={height=0.55,width=0.50}}e.globals.highlights={prompt="highlights> ",previewer={_ctor=d.builtin.highlights}}e.globals.helptags={prompt="Help> ",actions={["default"]=c.help,["ctrl-s"]=c.help,["ctrl-v"]=c.help_vert,["ctrl-t"]=c.help_tab},fzf_opts={["--delimiter"]="'[ ]'",["--with-nth"]="..-2"},previewer={_ctor=d.builtin.help_file}}e.globals.manpages={prompt="Man> ",cmd="man -k .",actions={["default"]=c.man,["ctrl-s"]=c.man,["ctrl-v"]=c.man_vert,["ctrl-t"]=c.man_tab},fzf_opts={["--tiebreak"]="begin"},previewer="man"}e.globals.lsp={previewer=e._default_previewer_fn,prompt_postfix="> ",file_icons=true and e._has_devicons,color_icons=true,git_icons=false,cwd_only=false,async_or_timeout=5000,_actions=function()return e.globals.actions.files end}e.globals.lsp.symbols={previewer=e._default_previewer_fn,prompt_postfix="> ",file_icons=true and e._has_devicons,color_icons=true,git_icons=false,symbol_style=1,symbol_hl_prefix="CmpItemKind",symbol_fmt=function(f)return"["..f.."]"end,async_or_timeout=true,_actions=function()return e.globals.actions.files end,actions={["ctrl-g"]={c.sym_lsym}}}e.globals.lsp.code_actions={prompt="Code Actions> ",ui_select=true,async_or_timeout=5000,winopts={row=0.40,height=0.35,width=0.60}}e.globals.diagnostics={previewer=e._default_previewer_fn,prompt="Diagnostics> ",file_icons=true and e._has_devicons,color_icons=true,git_icons=false,diag_icons=true,_actions=function()return e.globals.actions.files end}e.globals.builtin={prompt="Builtin> ",winopts={height=0.65,width=0.50},actions={["default"]=c.run_builtin}}e.globals.marks={prompt="Marks> ",actions={["default"]=c.goto_mark},previewer={_ctor=d.builtin.marks}}e.globals.jumps={prompt="Jumps> ",cmd="jumps",actions={["default"]=c.goto_jump},previewer={_ctor=d.builtin.jumps}}e.globals.tagstack={prompt="Tagstack> ",file_icons=true and e._has_devicons,color_icons=true,git_icons=true,previewer=e._default_previewer_fn,_actions=function()return e.globals.actions.files end}e.globals.commands={prompt="Commands> ",actions={["default"]=c.ex_run}}e.globals.command_history={prompt="Command History> ",fzf_opts={["--tiebreak"]="index"},actions={["default"]=c.ex_run_cr,["ctrl-e"]=c.ex_run}}e.globals.search_history={prompt="Search History> ",fzf_opts={["--tiebreak"]="index"},actions={["default"]=c.search_cr,["ctrl-e"]=c.search}}e.globals.registers={prompt="Registers> ",ignore_empty=true,actions={["default"]=c.paste_register}}e.globals.keymaps={prompt="Keymaps> "}e.globals.spell_suggest={prompt="Spelling Suggestions> ",actions={["default"]=c.spell_apply}}e.globals.filetypes={prompt="Filetypes> ",actions={["default"]=c.set_filetype}}e.globals.packadd={prompt="packadd> ",actions={["default"]=c.packadd}}e.globals.menus={prompt="Menu> ",actions={["default"]=c.exec_menu}}e.globals.tmux={buffers={prompt="Tmux Buffers> ",cmd="tmux list-buffers",register=[["]],actions={["default"]=c.tmux_buf_set_reg}}}e.globals.dap={commands={prompt="DAP Commands> "},configurations={prompt="DAP Configurations> "},variables={prompt="DAP Variables> "},frames={prompt="DAP Frames> "},breakpoints={prompt="DAP Breakpoints> ",file_icons=true and e._has_devicons,color_icons=true,git_icons=true,previewer=e._default_previewer_fn,_actions=function()return e.globals.actions.files end,fzf_opts={["--delimiter"]="'[\\]:]'",["--with-nth"]="2.."}}}e.globals.file_icon_padding=""if not e._has_devicons then e.globals.file_icon_colors={["lua"]="blue",["rockspec"]="magenta",["vim"]="green",["vifm"]="green",["sh"]="cyan",["zsh"]="cyan",["bash"]="cyan",["bat"]="cyan",["term"]="green",["py"]="green",["md"]="yellow",["go"]="magenta",["c"]="blue",["cpp"]="blue",["h"]="magenta",["hpp"]="magenta",["sol"]="magenta",["abi"]="yellow",["js"]="blue",["ts"]="cyan",["tsx"]="cyan",["css"]="magenta",["hs"]="blue",["rs"]="blue",["rst"]="yellow",["xml"]="yellow",["yml"]="yellow",["yaml"]="yellow",["json"]="yellow",["toml"]="yellow",["ini"]="red",["conf"]="red",["config"]="red",["plist"]="red",["local"]="red",["build"]="red",["patch"]="red",["diff"]="red",["service"]="red",["desktop"]="red",["txt"]="white",["ico"]="green",["gif"]="green",["jpg"]="green",["png"]="green",["svg"]="green",["otf"]="green",["ttf"]="green"}end;function e.normalize_opts(g,h)if not g then g={}end;if type(g)=="function"then g=g()end;g.__call_opts=g.__call_opts or b.deepcopy(g)if type(h._actions)=="function"then h.actions=vim.tbl_deep_extend("keep",h.actions or{},h._actions())end;g=vim.tbl_deep_extend("keep",g,b.tbl_deep_clone(h))for i,j in ipairs({"winopts","keymap","fzf_opts","previewers"})do g[j]=vim.tbl_deep_extend("keep",g[j]or{},b.tbl_deep_clone(e.globals[j])or{})end;for i,j in ipairs({"file_ignore_patterns"})do for i,k in ipairs({h,e.globals})do if k[j]then for i,l in ipairs(k[j])do if not g[j]then g[j]={}end;table.insert(g[j],l)end end end end;for i,f in ipairs({"fzf_args","fzf_cli_args","fzf_raw_args"})do if g[f]==nil then g[f]=e.globals[f]end;local m="%-%-prompt="local n=".-"local o=g[f]and g[f]:match(m.."(.)")if o and o~=[[']]and o~=[["]]then o=""n="[^%s]+"end;if o then local p=m..("%s(%s)%s"):format(o,n,o)local q=m..("%s%s%s"):format(o,n,o)if g[f]:match(q)then g.prompt=g[f]:match(p)g[f]=g[f]:gsub(q,"")end end end;local function r(s,t,u)if t[s]~=nil then return t[s]else return u[s]end end;g.global_resume=r("global_resume",g,e.globals)g.global_resume_query=r("global_resume_query",g,e.globals)if g.resume==nil then for i,s in ipairs({"repeat_last_search","continue_last_search"})do if g[s]~=nil then g.resume=g[s]end end end;for i,s in ipairs({"file_icons","git_icons","color_icons"})do local v=r("global_"..s,g,e.globals)if v~=nil then g[s]=g[s]and v end end;local w={["winopts.row"]="winopts.win_row",["winopts.col"]="winopts.win_col",["winopts.width"]="winopts.win_width",["winopts.height"]="winopts.win_height",["winopts.border"]="winopts.win_border",["winopts.on_create"]="winopts.window_on_create",["winopts.preview.wrap"]="preview_wrap",["winopts.preview.border"]="preview_border",["winopts.preview.hidden"]="preview_opts",["winopts.preview.vertical"]="preview_vertical",["winopts.preview.horizontal"]="preview_horizontal",["winopts.preview.layout"]="preview_layout",["winopts.preview.flip_columns"]="flip_columns",["winopts.preview.default"]="default_previewer",["winopts.hl.normal"]="winopts.hl_normal",["winopts.hl.border"]="winopts.hl_border",["winopts.hl.cursor"]="previewers.builtin.hl_cursor",["winopts.hl.cursorline"]="previewers.builtin.hl_cursorline",["winopts.preview.delay"]="previewers.builtin.delay",["winopts.preview.title"]="previewers.builtin.title",["winopts.preview.title_align"]="previewers.builtin.title_align",["winopts.preview.scrollbar"]="previewers.builtin.scrollbar",["winopts.preview.scrollchar"]="previewers.builtin.scrollchar",["diag_icons"]="lsp.lsp_icons"}local x=function(k,f,y,z)local A=b.strsplit(f,".")local B,C=k,nil;for D=1,#A do C=B;B=B[A[D]]if not B then break end;if y~=nil and D==#A then C[A[D]]=y end end;if y and z then b.warn(z)end;return B end;for j,y in pairs(w)do x(g,j,x(g,y)or x(e.globals,y))end;if type(g.previewer)=="function"then g.previewer=g.previewer()end;if type(g.previewer)=="table"then g.previewer=vim.tbl_deep_extend("keep",g.previewer,e.globals.previewers.builtin)end;if g.cwd and#g.cwd>0 then g.cwd=vim.fn.expand(g.cwd)if not vim.loop.fs_stat(g.cwd)then b.warn(("Unable to access '%s', removing 'cwd' option."):format(g.cwd))g.cwd=nil else if not a.starts_with_separator(g.cwd)then g.cwd=a.join({vim.loop.cwd(),g.cwd})end end end;g.git_icons=g.git_icons and a.is_git_repo(g,true)local E=function(F,G,H)if F and vim.fn.executable(F)~=1 then G(("'%s' is not a valid executable, %s"):format(F,H))return false end;return true end;g.fzf_bin=g.fzf_bin or e.globals.fzf_bin;if not g.fzf_bin or not E(g.fzf_bin,b.warn,"fallback to 'fzf'.")then g.fzf_bin="fzf"if vim.fn.executable(g.fzf_bin)~=1 then local I,J=pcall(vim.api.nvim_call_function,"fzf#exec",{})if I and J then g.fzf_bin=J end end;if not E(g.fzf_bin,b.err,"aborting. Please make sure 'fzf' is in installed.")then return nil end end;g._is_skim=g.fzf_bin:find("sk")~=nil;g._pid_cb=function(K)g._pid=K end;g._normalized=true;return g end;e.bytecode=function(f,L)local A=b.strsplit(f,".")local M=e;for D=1,#A do M=M[A[D]]if not M then break end;if D==#A and type(M)==L then return string.dump(M,true)end end end;e.get_global=function(f)local A=b.strsplit(f,".")local M=e.globals;for D=1,#A do M=M[A[D]]if not M then break end;if D==#A then return M end end end;e.set_global=function(f,N)local A=b.strsplit(f,".")local M=e.globals;for D=1,#A do if D==#A then M[A[D]]=N else local O=M;if not O[A[D]]then O[A[D]]={}end;M=O[A[D]]end end end;e.set_action_helpstr=function(P,Q)assert(type(P)=="function")e._action_to_helpstr[P]=Q end;e.get_action_helpstr=function(P)return e._action_to_helpstr[P]end;e._action_to_helpstr={[c.file_edit]="file-edit",[c.file_edit_or_qf]="file-edit-or-qf",[c.file_split]="file-split",[c.file_vsplit]="file-vsplit",[c.file_tabedit]="file-tabedit",[c.file_sel_to_qf]="file-selection-to-qf",[c.file_sel_to_ll]="file-selection-to-loclist",[c.file_switch]="file-switch",[c.file_switch_or_edit]="file-switch-or-edit",[c.buf_edit]="buffer-edit",[c.buf_edit_or_qf]="buffer-edit-or-qf",[c.buf_sel_to_qf]="buffer-selection-to-qf",[c.buf_sel_to_ll]="buffer-selection-to-loclist",[c.buf_split]="buffer-split",[c.buf_vsplit]="buffer-vsplit",[c.buf_tabedit]="buffer-tabedit",[c.buf_del]="buffer-delete",[c.buf_switch]="buffer-switch",[c.buf_switch_or_edit]="buffer-switch-or-edit",[c.colorscheme]="set-colorscheme",[c.run_builtin]="run-builtin",[c.ex_run]="edit-cmd",[c.ex_run_cr]="exec-cmd",[c.exec_menu]="exec-menu",[c.search]="edit-search",[c.search_cr]="exec-search",[c.goto_mark]="goto-mark",[c.goto_jump]="goto-jump",[c.spell_apply]="spell-apply",[c.set_filetype]="set-filetype",[c.packadd]="packadd",[c.help]="help-open",[c.help_vert]="help-vertical",[c.help_tab]="help-tab",[c.man]="man-open",[c.man_vert]="man-vertical",[c.man_tab]="man-tab",[c.git_switch]="git-switch",[c.git_checkout]="git-checkout",[c.git_stage]="git-stage",[c.git_unstage]="git-unstage",[c.git_reset]="git-reset",[c.git_stash_pop]="git-stash-pop",[c.git_stash_drop]="git-stash-drop",[c.git_stash_apply]="git-stash-apply",[c.git_buf_edit]="git-buffer-edit",[c.git_buf_tabedit]="git-buffer-tabedit",[c.git_buf_split]="git-buffer-split",[c.git_buf_vsplit]="git-buffer-vsplit",[c.arg_add]="arg-list-add",[c.arg_del]="arg-list-delete",[c.grep_lgrep]="grep<->lgrep",[c.sym_lsym]="sym<->lsym",[c.tmux_buf_set_reg]="set-register",[c.paste_register]="paste-register"}return e
