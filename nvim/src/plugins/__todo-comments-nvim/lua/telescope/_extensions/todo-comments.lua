local a,b=pcall(require,"telescope")if not a then error("This plugins requires nvim-telescope/telescope.nvim")end;local c=require("telescope.builtin")local d=require("todo-comments.config")local e=require("todo-comments.highlight")local f=require("telescope.make_entry")local function g(h)assert(not h or type(h)=="string","'keywords' must be a comma separated string or nil")local i=vim.tbl_keys(d.keywords)if not h then return i end;local j=vim.split(h,",")return vim.tbl_filter(function(k)return vim.tbl_contains(j,k)end,i)end;local function l(m)m=m or{}m.vimgrep_arguments={d.options.search.command}vim.list_extend(m.vimgrep_arguments,d.options.search.args)m.search=d.search_regex(g(m.keywords))m.prompt_title="Find Todo"m.use_regex=true;local n=f.gen_from_vimgrep(m)m.entry_maker=function(o)local p=n(o)p.display=function(q)local r=string.format("%s:%s:%s ",q.filename,q.lnum,q.col)local s=q.text;local t,u,k=e.match(s)local v={}if t then k=d.keywords[k]or k;local w=d.options.keywords[k].icon;r=w.." "..r;table.insert(v,{{1,#w+1},"TodoFg"..k})s=vim.trim(s:sub(t))table.insert(v,{{#r,#r+u-t+2},"TodoBg"..k})table.insert(v,{{#r+u-t+1,#r+u+1+#s},"TodoFg"..k})r=r.." "..s end;return r,v end;return p end;c.grep_string(m)end;return b.register_extension({exports={todo=l}})
