local a={}a.calculate=function()local b=vim.api.nvim_buf_get_mark(0,"<")local c=vim.api.nvim_buf_get_mark(0,">")local d=vim.api.nvim_get_current_line()local e=d:sub(b[2]+1,c[2]+1)local function f(g)return"math.pow("..g:gsub("%^",", ")..')'end;local function h(g)return g:gsub("e","math.exp(1)")end;e=e:gsub("abs","math.abs"):gsub("pow","math.pow"):gsub("%w%^%w",f):gsub("log","math.log"):gsub("ln","math.log"):gsub("lg","math.log10"):gsub("cos","math.cos"):gsub("cosh","math.cosh"):gsub("acos","math.acos"):gsub("sin","math.sin"):gsub("sinh","math.sinh"):gsub("asin","math.asin"):gsub("tan","math.tan"):gsub("tanh","math.tanh"):gsub("atan","math.atan"):gsub("atan2","math.atan2"):gsub("rad","math.rad"):gsub("deg","math.deg"):gsub("pi","math.pi"):gsub("floor","math.floor"):gsub("ceil","math.ceil"):gsub("fmod","math.fmod"):gsub("modf","math.modf"):gsub("exp","math.exp"):gsub("%We%W",h):gsub("frexp","math.frexp"):gsub("ldexp","math.ldexp"):gsub("min","math.min"):gsub("max","math.max"):gsub("sqrt","math.sqrt"):gsub("inf","math.huge")local i,j=load("return tostring("..e..")")if not i then vim.api.nvim_command([[echo ("]]..tostring(j):gsub([["]],[[\"]])..[[")]])else local k,l=pcall(i)if k then d=d:sub(0,b[2])..l..d:sub(c[2]+2)vim.api.nvim_set_current_line(d)else vim.api.nvim_command([[echo ("]]..tostring(l):gsub([["]],[[\"]])..[[")]])end end end;return a
