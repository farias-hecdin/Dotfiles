local a={}a.styles_list={'dark','darker','cool','deep','warm','warmer','light'}function a.set_options(b,c)local d=vim.g.onedark_config;d[b]=c;vim.g.onedark_config=d end;function a.colorscheme()vim.cmd("hi clear")if vim.fn.exists("syntax_on")then vim.cmd("syntax reset")end;vim.o.termguicolors=true;vim.g.colors_name="onedark"if vim.o.background=='light'then a.set_options('style','light')elseif vim.g.onedark_config.style=='light'then a.set_options('style','dark')end;require('onedark.highlights').setup()require('onedark.terminal').setup()end;function a.toggle()local e=vim.g.onedark_config.toggle_style_index+1;if e>#vim.g.onedark_config.toggle_style_list then e=1 end;a.set_options('style',vim.g.onedark_config.toggle_style_list[e])a.set_options('toggle_style_index',e)if vim.g.onedark_config.style=='light'then vim.o.background='light'else vim.o.background='dark'end;vim.api.nvim_command('colorscheme onedark')end;local f={style='dark',toggle_style_key=nil,toggle_style_list=a.styles_list,transparent=false,term_colors=true,ending_tildes=false,cmp_itemkind_reverse=false,code_style={comments='italic',keywords='none',functions='none',strings='none',variables='none'},lualine={transparent=false},colors={},highlights={},diagnostics={darker=true,undercurl=true,background=true}}function a.setup(g)if not vim.g.onedark_config or not vim.g.onedark_config.loaded then vim.g.onedark_config=vim.tbl_deep_extend('keep',vim.g.onedark_config or{},f)a.set_options('loaded',true)a.set_options('toggle_style_index',0)end;if g then vim.g.onedark_config=vim.tbl_deep_extend('force',vim.g.onedark_config,g)if g.toggle_style_list then a.set_options('toggle_style_list',g.toggle_style_list)end end;if vim.g.onedark_config.toggle_style_key then vim.api.nvim_set_keymap('n',vim.g.onedark_config.toggle_style_key,'<cmd>lua require("onedark").toggle()<cr>',{noremap=true,silent=true})end end;function a.load()vim.api.nvim_command('colorscheme onedark')end;return a
