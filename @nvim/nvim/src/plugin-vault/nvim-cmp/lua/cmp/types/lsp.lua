local a=require('cmp.utils.misc')local b={}b.PositionEncodingKind={UTF8='utf-8',UTF16='utf-16',UTF32='utf-32'}b.Position={to_vim=function(c,d)if not vim.api.nvim_buf_is_loaded(c)then vim.fn.bufload(c)end;local e=vim.api.nvim_buf_get_lines(c,d.line,d.line+1,false)if#e>0 then return{row=d.line+1,col=a.to_vimindex(e[1],d.character)}end;return{row=d.line+1,col=d.character+1}end,to_lsp=function(c,d)if not vim.api.nvim_buf_is_loaded(c)then vim.fn.bufload(c)end;local e=vim.api.nvim_buf_get_lines(c,d.row-1,d.row,false)if#e>0 then return{line=d.row-1,character=a.to_utfindex(e[1],d.col)}end;return{line=d.row-1,character=d.col-1}end,to_utf8=function(f,d,g)g=g or b.PositionEncodingKind.UTF16;if g==b.PositionEncodingKind.UTF8 then return d end;local h,i=pcall(function()return vim.str_byteindex(f,d.character,g==b.PositionEncodingKind.UTF16)end)if not h then return d end;return{line=d.line,character=i}end,to_utf16=function(f,d,g)g=g or b.PositionEncodingKind.UTF16;if g==b.PositionEncodingKind.UTF16 then return d end;local j=b.Position.to_utf8(f,d,g)for k=j.character,0,-1 do local h,l=pcall(function()return select(2,vim.str_utfindex(f,k))end)if h then return{line=j.line,character=l}end end;return d end,to_utf32=function(f,d,g)g=g or b.PositionEncodingKind.UTF16;if g==b.PositionEncodingKind.UTF32 then return d end;local j=b.Position.to_utf8(f,d,g)for k=j.character,0,-1 do local h,m=pcall(function()return select(1,vim.str_utfindex(f,k))end)if h then return{line=j.line,character=m}end end;return d end}b.Range={to_vim=function(c,n)return{start=b.Position.to_vim(c,n.start),['end']=b.Position.to_vim(c,n['end'])}end,to_lsp=function(c,n)return{start=b.Position.to_lsp(c,n.start),['end']=b.Position.to_lsp(c,n['end'])}end}b.CompletionTriggerKind={Invoked=1,TriggerCharacter=2,TriggerForIncompleteCompletions=3}b.InsertTextFormat={}b.InsertTextFormat.PlainText=1;b.InsertTextFormat.Snippet=2;b.InsertTextMode={AsIs=1,AdjustIndentation=2}b.MarkupKind={PlainText='plaintext',Markdown='markdown'}b.CompletionItemTag={Deprecated=1}b.CompletionItemKind={Text=1,Method=2,Function=3,Constructor=4,Field=5,Variable=6,Class=7,Interface=8,Module=9,Property=10,Unit=11,Value=12,Enum=13,Keyword=14,Snippet=15,Color=16,File=17,Reference=18,Folder=19,EnumMember=20,Constant=21,Struct=22,Event=23,Operator=24,TypeParameter=25}b.CompletionItemKind=vim.tbl_add_reverse_lookup(b.CompletionItemKind)return b
