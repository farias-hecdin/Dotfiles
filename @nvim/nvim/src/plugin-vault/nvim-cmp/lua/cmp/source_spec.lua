local a=require('cmp.config')local b=require('cmp.utils.spec')local c=require('cmp.source')describe('source',function()before_each(b.before)describe('keyword length',function()it('not enough',function()a.set_buffer({completion={keyword_length=3}},vim.api.nvim_get_current_buf())local d=b.state('',1,1)local e=c.new('spec',{complete=function(f,f,g)g({{label='spec'}})end})assert.is.truthy(not e:complete(d.input('a'),function()end))end)it('enough',function()a.set_buffer({completion={keyword_length=3}},vim.api.nvim_get_current_buf())local d=b.state('',1,1)local e=c.new('spec',{complete=function(f,f,g)g({{label='spec'}})end})assert.is.truthy(e:complete(d.input('aiu'),function()end))end)it('enough -> not enough',function()a.set_buffer({completion={keyword_length=3}},vim.api.nvim_get_current_buf())local d=b.state('',1,1)local e=c.new('spec',{complete=function(f,f,g)g({{label='spec'}})end})assert.is.truthy(e:complete(d.input('aiu'),function()end))assert.is.truthy(not e:complete(d.backspace(),function()end))end)it('continue',function()a.set_buffer({completion={keyword_length=3}},vim.api.nvim_get_current_buf())local d=b.state('',1,1)local e=c.new('spec',{complete=function(f,f,g)g({{label='spec'}})end})assert.is.truthy(e:complete(d.input('aiu'),function()end))assert.is.truthy(not e:complete(d.input('eo'),function()end))end)end)describe('isIncomplete',function()it('isIncomplete=true',function()local d=b.state('',1,1)local e=c.new('spec',{complete=function(f,f,g)g({items={{label='spec'}},isIncomplete=true})end})vim.wait(100,function()return e.status==c.SourceStatus.COMPLETED end,100,false)assert.is.truthy(e:complete(d.input('s'),function()end))vim.wait(100,function()return e.status==c.SourceStatus.COMPLETED end,100,false)assert.is.truthy(e:complete(d.input('p'),function()end))vim.wait(100,function()return e.status==c.SourceStatus.COMPLETED end,100,false)assert.is.truthy(e:complete(d.input('e'),function()end))vim.wait(100,function()return e.status==c.SourceStatus.COMPLETED end,100,false)assert.is.truthy(e:complete(d.input('c'),function()end))vim.wait(100,function()return e.status==c.SourceStatus.COMPLETED end,100,false)end)end)end)
