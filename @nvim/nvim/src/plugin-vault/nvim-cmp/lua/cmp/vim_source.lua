local a=require('cmp.utils.misc')local b={}b.on_callback=function(c,d)if b.to_callback.callbacks[c]then b.to_callback.callbacks[c](unpack(d))end end;b.to_callback=setmetatable({callbacks={}},{__call=function(self,e)local c=a.id('cmp.vim_source.to_callback')self.callbacks[c]=function(...)e(...)self.callbacks[c]=nil end;return c end})b.to_args=function(d)for f,g in ipairs(d)do if type(g)=='function'then d[f]=b.to_callback(g)end end;return d end;b.new=function(h,i)local self={}for j,k in ipairs(i)do self[k]=(function(l)return function(j,...)return vim.fn['cmp#_method'](h,l,b.to_args({...}))end end)(k)end;return self end;return b
