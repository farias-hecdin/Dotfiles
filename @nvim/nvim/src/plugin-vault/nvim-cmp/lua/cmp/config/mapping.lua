local a=require('cmp.types')local b=require('cmp.utils.misc')local c=require('cmp.utils.keymap')local function d(e,f)local g={}for h,i in pairs(e)do g[c.normalize(h)]=i end;local j={}for h,i in pairs(f)do j[c.normalize(h)]=i end;return b.merge(g,j)end;local k=setmetatable({},{__call=function(l,m,n)if type(m)=='function'then local o={}for l,p in ipairs(n or{'i'})do o[p]=m end;return o end;return m end})k.preset={}k.preset.insert=function(f)return d(f or{},{['<Down>']={i=k.select_next_item({behavior=a.cmp.SelectBehavior.Select})},['<Up>']={i=k.select_prev_item({behavior=a.cmp.SelectBehavior.Select})},['<C-n>']={i=function()local q=require('cmp')if q.visible()then q.select_next_item({behavior=a.cmp.SelectBehavior.Insert})else q.complete()end end},['<C-p>']={i=function()local q=require('cmp')if q.visible()then q.select_prev_item({behavior=a.cmp.SelectBehavior.Insert})else q.complete()end end},['<C-y>']={i=k.confirm({select=false})},['<C-e>']={i=k.abort()}})end;k.preset.cmdline=function(f)return d(f or{},{['<C-z>']={c=function()local q=require('cmp')if q.visible()then q.select_next_item()else q.complete()end end},['<Tab>']={c=function()local q=require('cmp')if q.visible()then q.select_next_item()else q.complete()end end},['<S-Tab>']={c=function()local q=require('cmp')if q.visible()then q.select_prev_item()else q.complete()end end},['<C-n>']={c=function(r)local q=require('cmp')if q.visible()then q.select_next_item()else r()end end},['<C-p>']={c=function(r)local q=require('cmp')if q.visible()then q.select_prev_item()else r()end end},['<C-e>']={c=k.abort()},['<C-y>']={c=k.confirm({select=false})}})end;k.complete=function(s)return function(r)if not require('cmp').complete(s)then r()end end end;k.complete_common_string=function()return function(r)if not require('cmp').complete_common_string()then r()end end end;k.close=function()return function(r)if not require('cmp').close()then r()end end end;k.abort=function()return function(r)if not require('cmp').abort()then r()end end end;k.scroll_docs=function(t)return function(r)if not require('cmp').scroll_docs(t)then r()end end end;k.select_next_item=function(s)return function(r)if not require('cmp').select_next_item(s)then local u=require('cmp').core:suspend()r()vim.schedule(u)end end end;k.select_prev_item=function(s)return function(r)if not require('cmp').select_prev_item(s)then local u=require('cmp').core:suspend()r()vim.schedule(u)end end end;k.confirm=function(s)return function(r)if not require('cmp').confirm(s)then r()end end end;return k
