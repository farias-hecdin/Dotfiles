local a=require('cmp.utils.spec')local b=require('cmp.matcher')describe('matcher',function()before_each(a.before)it('match',function()assert.is.truthy(b.match('','a')>=1)assert.is.truthy(b.match('a','a')>=1)assert.is.truthy(b.match('ab','a')==0)assert.is.truthy(b.match('ab','ab')>b.match('ab','a_b'))assert.is.truthy(b.match('ab','a_b_c')>b.match('ac','a_b_c'))assert.is.truthy(b.match('bora','border-radius')>=1)assert.is.truthy(b.match('woroff','word_offset')>=1)assert.is.truthy(b.match('call','call')>b.match('call','condition_all'))assert.is.truthy(b.match('Buffer','Buffer')>b.match('Buffer','buffer'))assert.is.truthy(b.match('luacon','lua_context')>b.match('luacon','LuaContext'))assert.is.truthy(b.match('fmodify','fnamemodify')>=1)assert.is.truthy(b.match('candlesingle','candle#accept#single')>=1)assert.is.truthy(b.match('vi','void#')>=1)assert.is.truthy(b.match('vo','void#')>=1)assert.is.truthy(b.match('var_','var_dump')>=1)assert.is.truthy(b.match('conso','console')>b.match('conso','ConstantSourceNode'))assert.is.truthy(b.match('usela','useLayoutEffect')>b.match('usela','useDataLayer'))assert.is.truthy(b.match('my_','my_awesome_variable')>b.match('my_','completion_matching_strategy_list'))assert.is.truthy(b.match('2','[[2021')>=1)assert.is.truthy(b.match(',','pri,')==0)assert.is.truthy(b.match('/','/**')>=1)assert.is.truthy(b.match('true','v:true',{synonyms={'true'}})==b.match('true','true'))assert.is.truthy(b.match('g','get',{synonyms={'get'}})>b.match('g','dein#get',{'dein#get'}))assert.is.truthy(b.match('Unit','net.UnixListener',{disallow_partial_fuzzy_matching=true})==0)assert.is.truthy(b.match('Unit','net.UnixListener',{disallow_partial_fuzzy_matching=false})>=1)assert.is.truthy(b.match('emg','error_msg')>=1)assert.is.truthy(b.match('sasr','saved_splitright')>=1)local c,d;c,d=b.match('tail','HCDetails',{disallow_fuzzy_matching=false,disallow_partial_matching=false,disallow_prefix_unmatching=false,disallow_partial_fuzzy_matching=false})assert.is.truthy(c>=1)assert.equals(d[1].word_match_start,5)c=b.match('tail','HCDetails',{disallow_fuzzy_matching=false,disallow_partial_matching=false,disallow_prefix_unmatching=false,disallow_partial_fuzzy_matching=true})assert.is.truthy(c==0)end)it('disallow_fuzzy_matching',function()assert.is.truthy(b.match('fmodify','fnamemodify',{disallow_fuzzy_matching=true})==0)assert.is.truthy(b.match('fmodify','fnamemodify',{disallow_fuzzy_matching=false})>=1)end)it('disallow_fullfuzzy_matching',function()assert.is.truthy(b.match('svd','saved_splitright',{disallow_fullfuzzy_matching=true})==0)assert.is.truthy(b.match('svd','saved_splitright',{disallow_fullfuzzy_matching=false})>=1)end)it('disallow_partial_matching',function()assert.is.truthy(b.match('fb','foo_bar',{disallow_partial_matching=true})==0)assert.is.truthy(b.match('fb','foo_bar',{disallow_partial_matching=false})>=1)assert.is.truthy(b.match('fb','fboo_bar',{disallow_partial_matching=true})>=1)assert.is.truthy(b.match('fb','fboo_bar',{disallow_partial_matching=false})>=1)end)it('disallow_prefix_unmatching',function()assert.is.truthy(b.match('bar','foo_bar',{disallow_prefix_unmatching=true})==0)assert.is.truthy(b.match('bar','foo_bar',{disallow_prefix_unmatching=false})>=1)end)it('debug',function()b.debug=function(...)print(vim.inspect({...}))end end)end)
