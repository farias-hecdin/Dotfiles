local a={}local b=vim.api.nvim_replace_termcodes('<C-v>',true,true,true)local c=vim.api.nvim_replace_termcodes('<C-s>',true,true,true)a.get_mode=function()local d=vim.api.nvim_get_mode().mode:sub(1,1)if d=='i'then return'i'elseif d=='v'or d=='V'or d==b then return'x'elseif d=='s'or d=='S'or d==c then return's'elseif d=='c'and vim.fn.getcmdtype()~='='then return'c'end end;a.is_insert_mode=function()return a.get_mode()=='i'end;a.is_cmdline_mode=function()return a.get_mode()=='c'end;a.is_select_mode=function()return a.get_mode()=='s'end;a.is_visual_mode=function()return a.get_mode()=='x'end;a.is_suitable_mode=function()local d=a.get_mode()return d=='i'or d=='c'end;a.get_current_line=function()if a.is_cmdline_mode()then return vim.fn.getcmdline()end;return vim.api.nvim_get_current_line()end;a.get_cursor=function()if a.is_cmdline_mode()then return{math.min(vim.o.lines,vim.o.lines-(vim.api.nvim_get_option('cmdheight')-1)),vim.fn.getcmdpos()-1}end;return vim.api.nvim_win_get_cursor(0)end;a.get_screen_cursor=function()if a.is_cmdline_mode()then local e=a.get_cursor()return{e[1],vim.fn.strdisplaywidth(string.sub(vim.fn.getcmdline(),1,e[2]+1))}end;local e=a.get_cursor()local f=vim.fn.screenpos(0,e[1],e[2]+1)return{f.row,f.col-1}end;a.get_cursor_before_line=function()local e=a.get_cursor()return string.sub(a.get_current_line(),1,e[2])end;return a
