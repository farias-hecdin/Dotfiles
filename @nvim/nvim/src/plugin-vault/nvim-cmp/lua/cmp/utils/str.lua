local a=require('cmp.utils.char')local b={}local c={}c[string.byte("'")]=true;c[string.byte('"')]=true;c[string.byte('=')]=true;c[string.byte('$')]=true;c[string.byte('(')]=true;c[string.byte('[')]=true;c[string.byte('<')]=true;c[string.byte('{')]=true;c[string.byte(' ')]=true;c[string.byte('\t')]=true;c[string.byte('\n')]=true;c[string.byte('\r')]=true;local d=string.byte('\n')local e={}e[string.byte('<')]=string.byte('>')e[string.byte('[')]=string.byte(']')e[string.byte('(')]=string.byte(')')e[string.byte('{')]=string.byte('}')e[string.byte('"')]=string.byte('"')e[string.byte("'")]=string.byte("'")b.has_prefix=function(f,g)if#f<#g then return false end;for h=1,#g do if not a.match(string.byte(f,h),string.byte(g,h))then return false end end;return true end;b.get_common_string=function(i,j)local k=math.min(#i,#j)for h=1,k do if not a.match(string.byte(i,h),string.byte(j,h))then return string.sub(i,1,h-1)end end;return string.sub(i,1,k)end;b.remove_suffix=function(f,l)if#f<#l then return f end;local h=0;while h<#l do if string.byte(f,#f-h)~=string.byte(l,#l-h)then return f end;h=h+1 end;return string.sub(f,1,-#l-1)end;b.trim=function(f)local m=1;for h=1,#f do if not a.is_white(string.byte(f,h))then m=h;break end end;local n=#f;for h=#f,1,-1 do if not a.is_white(string.byte(f,h))then n=h;break end end;if m==1 and n==#f then return f end;return string.sub(f,m,n)end;b.get_word=function(f,o,p)p=p or 0;local q=false;local r={}local s={}local t=function(u)table.insert(s,string.char(u))if r[#r]==u then table.remove(r,#r)else if e[u]then table.insert(r,u)end end end;for h=1,#f do local u=string.byte(f,h,h)if#s<p then table.insert(s,string.char(u))elseif not c[u]then t(u)q=q or a.is_alnum(u)elseif not q then t(u)elseif#r~=0 then t(u)if q and#r==0 then break end else break end end;if o and s[#s]==string.char(o)then table.remove(s,#s)end;return table.concat(s,'')end;b.oneline=function(f)for h=1,#f do if string.byte(f,h)==d then return string.sub(f,1,h-1)end end;return f end;b.escape=function(f,v)table.insert(v,'\\')local w={}local h=1;while h<=#f do local u=string.sub(f,h,h)if vim.tbl_contains(v,u)then table.insert(w,'\\')table.insert(w,u)else table.insert(w,u)end;h=h+1 end;return table.concat(w,'')end;return b
