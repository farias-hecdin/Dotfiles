if vim.g.loaded_cmp then return end;vim.g.loaded_cmp=true;if not vim.api.nvim_create_autocmd then return print('[nvim-cmp] Your nvim does not has `nvim_create_autocmd` function. Please update to latest nvim.')end;local a=require('cmp.utils.api')local b=require('cmp.types')local c=require('cmp.utils.highlight')local d=require('cmp.utils.autocmd')vim.api.nvim_set_hl(0,'CmpItemAbbr',{link='CmpItemAbbrDefault',default=true})vim.api.nvim_set_hl(0,'CmpItemAbbrDeprecated',{link='CmpItemAbbrDeprecatedDefault',default=true})vim.api.nvim_set_hl(0,'CmpItemAbbrMatch',{link='CmpItemAbbrMatchDefault',default=true})vim.api.nvim_set_hl(0,'CmpItemAbbrMatchFuzzy',{link='CmpItemAbbrMatchFuzzyDefault',default=true})vim.api.nvim_set_hl(0,'CmpItemKind',{link='CmpItemKindDefault',default=true})vim.api.nvim_set_hl(0,'CmpItemMenu',{link='CmpItemMenuDefault',default=true})for e in pairs(b.lsp.CompletionItemKind)do if type(e)=='string'then local f=('CmpItemKind%s'):format(e)vim.api.nvim_set_hl(0,f,{link=('%sDefault'):format(f),default=true})end end;d.subscribe('ColorScheme',function()c.inherit('CmpItemAbbrDefault','Pmenu',{bg='NONE',default=false})c.inherit('CmpItemAbbrDeprecatedDefault','Comment',{bg='NONE',default=false})c.inherit('CmpItemAbbrMatchDefault','Pmenu',{bg='NONE',default=false})c.inherit('CmpItemAbbrMatchFuzzyDefault','Pmenu',{bg='NONE',default=false})c.inherit('CmpItemKindDefault','Special',{bg='NONE',default=false})c.inherit('CmpItemMenuDefault','Pmenu',{bg='NONE',default=false})for f in pairs(b.lsp.CompletionItemKind)do if type(f)=='string'then vim.api.nvim_set_hl(0,('CmpItemKind%sDefault'):format(f),{link='CmpItemKind',default=false})end end end)d.emit('ColorScheme')if vim.on_key then vim.on_key(function(g)if g==vim.api.nvim_replace_termcodes('<C-c>',true,true,true)then vim.schedule(function()if not a.is_suitable_mode()then d.emit('InsertLeave')end end)end end,vim.api.nvim_create_namespace('cmp.plugin'))end;vim.api.nvim_create_user_command('CmpStatus',function()require('cmp').status()end,{desc='Check status of cmp sources'})vim.cmd([[doautocmd <nomodeline> User CmpReady]])
