local a=require('Comment.utils')local b=vim.api;local c={}local function d(e,f)b.nvim_win_set_cursor(0,{e,f})b.nvim_feedkeys('a','ni',true)end;local function g(h,i,j)local e,f=unpack(b.nvim_win_get_cursor(0))local k={cmode=a.cmode.comment,cmotion=a.cmotion.line,ctype=i,range={srow=e,scol=f,erow=e,ecol=f}}local l=e+h;local m,n=a.parse_cstr(j,k)local o=a.get_pad(a.is_fn(j.padding))local p=a.is_empty(n)and n or o..n;b.nvim_buf_set_lines(0,l,l,false,{m..o..p})b.nvim_win_set_cursor(0,{l+1,0})b.nvim_command('normal! ==')d(l+1,#b.nvim_get_current_line()-#p-1)a.is_fn(j.post_hook,k)end;function c.insert_below(i,j)g(0,i,j)end;function c.insert_above(i,j)g(-1,i,j)end;function c.insert_eol(i,j)local l,q=unpack(b.nvim_win_get_cursor(0))local k={cmode=a.cmode.comment,cmotion=a.cmotion.line,ctype=i,range={srow=l,scol=q,erow=l,ecol=q}}local m,n=a.parse_cstr(j,k)local r=b.nvim_get_current_line()local o=a.get_pad(a.is_fn(j.padding))local p=a.is_empty(n)and n or o..n;local s;if a.is_empty(r)then b.nvim_set_current_line(m..o..p)b.nvim_command('normal! ==')s=#b.nvim_get_current_line()-#p-1 else local t=vim.bo.filetype=='python'and'  'or' 'local u=r..t..m..o;b.nvim_set_current_line(u..p)s=#u-1 end;d(l,s)a.is_fn(j.post_hook,k)end;return c
