local a=require('Comment.utils')local b=require('Comment.config')local c=vim.api;local d={}function d.opfunc(e,f,g,h)local i=a.get_region(e)local j=e==nil and a.cmotion.line or a.cmotion[e]local k=j==a.cmotion.char or j==a.cmotion.v;local l=k and i.srow==i.erow;local m=a.get_lines(i)if a.is_empty(m)then return end;local n={cmode=g,cmotion=j,ctype=l and a.ctype.blockwise or h,range=i}local o,p=a.parse_cstr(f,n)local q={cfg=f,lines=m,lcs=o,rcs=p,cmode=g,range=i}if e~=nil and(l or h==a.ctype.blockwise)then n.cmode=d.blockwise(q,k)else n.cmode=d.linewise(q)end;if f.sticky and b.position and j~=a.cmotion.v and j~=a.cmotion.V then c.nvim_win_set_cursor(0,b.position)b.position=nil end;a.is_fn(f.post_hook,n)end;function d.count(r,f,g,h)local m,i=a.get_count_lines(r)local n={cmode=g,cmotion=a.cmotion.line,ctype=h,range=i}local o,p=a.parse_cstr(f,n)local q={cfg=f,cmode=n.cmode,lines=m,lcs=o,rcs=p,range=i}if h==a.ctype.blockwise then n.cmode=d.blockwise(q)else n.cmode=d.linewise(q)end;a.is_fn(f.post_hook,n)end;function d.linewise(s)local t=a.is_fn(s.cfg.ignore)local u=a.is_fn(s.cfg.padding)local v=a.is_commented(s.lcs,s.rcs,u)local g=a.cmode.uncomment;local w,x=-1,false;if s.cmode~=a.cmode.uncomment then for y,z in ipairs(s.lines)do if not a.ignore(z,t)then if g==a.cmode.uncomment and s.cmode==a.cmode.toggle and not v(z)then g=a.cmode.comment end;if not a.is_empty(z)and s.cmode~=a.cmode.uncomment then local y,A=string.find(z,'^%s*')if w==-1 or w>A then w,x=A,string.find(z,'^\t')~=nil end end end end end;if s.cmode~=a.cmode.toggle then g=s.cmode end;if g==a.cmode.uncomment then local B=a.uncommenter(s.lcs,s.rcs,u)for C,z in ipairs(s.lines)do if not a.ignore(z,t)then s.lines[C]=B(z)end end else local D=a.commenter(s.lcs,s.rcs,u,w,nil,x)for C,z in ipairs(s.lines)do if not a.ignore(z,t)then s.lines[C]=D(z)end end end;c.nvim_buf_set_lines(0,s.range.srow-1,s.range.erow,false,s.lines)return g end;function d.blockwise(s,E)local F=#s.lines==1;local m=F and s.lines[1]or s.lines;local u=a.is_fn(s.cfg.padding)local G,H=nil,nil;if F or E then G,H=s.range.scol,s.range.ecol end;local g=s.cmode;if g==a.cmode.toggle then local I=a.is_commented(s.lcs,s.rcs,u,G,H)(m)g=I and a.cmode.uncomment or a.cmode.comment end;if g==a.cmode.uncomment then m=a.uncommenter(s.lcs,s.rcs,u,G,H)(m)else m=a.commenter(s.lcs,s.rcs,u,G,H)(m)end;if F then c.nvim_set_current_line(m)else c.nvim_buf_set_lines(0,s.range.srow-1,s.range.erow,false,m)end;return g end;return d
