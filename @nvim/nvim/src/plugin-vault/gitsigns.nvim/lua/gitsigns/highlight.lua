local a=vim.api;local b={}b.hls={{GitSignsAdd={'GitGutterAdd','SignifySignAdd','DiffAddedGutter','diffAdded','DiffAdd',desc="Used for the text of 'add' signs."}},{GitSignsChange={'GitGutterChange','SignifySignChange','DiffModifiedGutter','diffChanged','DiffChange',desc="Used for the text of 'change' signs."}},{GitSignsDelete={'GitGutterDelete','SignifySignDelete','DiffRemovedGutter','diffRemoved','DiffDelete',desc="Used for the text of 'delete' signs."}},{GitSignsChangedelete={'GitSignsChange',desc="Used for the text of 'changedelete' signs."}},{GitSignsTopdelete={'GitSignsDelete',desc="Used for the text of 'topdelete' signs."}},{GitSignsUntracked={'GitSignsAdd',desc="Used for the text of 'untracked' signs."}},{GitSignsAddNr={'GitGutterAddLineNr','GitSignsAdd',desc="Used for number column (when `config.numhl == true`) of 'add' signs."}},{GitSignsChangeNr={'GitGutterChangeLineNr','GitSignsChange',desc="Used for number column (when `config.numhl == true`) of 'change' signs."}},{GitSignsDeleteNr={'GitGutterDeleteLineNr','GitSignsDelete',desc="Used for number column (when `config.numhl == true`) of 'delete' signs."}},{GitSignsChangedeleteNr={'GitSignsChangeNr',desc="Used for number column (when `config.numhl == true`) of 'changedelete' signs."}},{GitSignsTopdeleteNr={'GitSignsDeleteNr',desc="Used for number column (when `config.numhl == true`) of 'topdelete' signs."}},{GitSignsUntrackedNr={'GitSignsAddNr',desc="Used for number column (when `config.numhl == true`) of 'untracked' signs."}},{GitSignsAddLn={'GitGutterAddLine','SignifyLineAdd','DiffAdd',desc="Used for buffer line (when `config.linehl == true`) of 'add' signs."}},{GitSignsChangeLn={'GitGutterChangeLine','SignifyLineChange','DiffChange',desc="Used for buffer line (when `config.linehl == true`) of 'change' signs."}},{GitSignsChangedeleteLn={'GitSignsChangeLn',desc="Used for buffer line (when `config.linehl == true`) of 'changedelete' signs."}},{GitSignsUntrackedLn={'GitSignsAddLn',desc="Used for buffer line (when `config.linehl == true`) of 'untracked' signs."}},{GitSignsStagedAdd={'GitSignsAdd',fg_factor=0.5,hidden=true}},{GitSignsStagedChange={'GitSignsChange',fg_factor=0.5,hidden=true}},{GitSignsStagedDelete={'GitSignsDelete',fg_factor=0.5,hidden=true}},{GitSignsStagedChangedelete={'GitSignsChangedelete',fg_factor=0.5,hidden=true}},{GitSignsStagedTopdelete={'GitSignsTopdelete',fg_factor=0.5,hidden=true}},{GitSignsStagedAddNr={'GitSignsAddNr',fg_factor=0.5,hidden=true}},{GitSignsStagedChangeNr={'GitSignsChangeNr',fg_factor=0.5,hidden=true}},{GitSignsStagedDeleteNr={'GitSignsDeleteNr',fg_factor=0.5,hidden=true}},{GitSignsStagedChangedeleteNr={'GitSignsChangedeleteNr',fg_factor=0.5,hidden=true}},{GitSignsStagedTopdeleteNr={'GitSignsTopdeleteNr',fg_factor=0.5,hidden=true}},{GitSignsStagedAddLn={'GitSignsAddLn',fg_factor=0.5,hidden=true}},{GitSignsStagedChangeLn={'GitSignsChangeLn',fg_factor=0.5,hidden=true}},{GitSignsStagedDeleteLn={'GitSignsDeleteLn',fg_factor=0.5,hidden=true}},{GitSignsStagedChangedeleteLn={'GitSignsChangedeleteLn',fg_factor=0.5,hidden=true}},{GitSignsStagedTopdeleteLn={'GitSignsTopdeleteLn',fg_factor=0.5,hidden=true}},{GitSignsAddPreview={'GitGutterAddLine','SignifyLineAdd','DiffAdd',desc='Used for added lines in previews.'}},{GitSignsDeletePreview={'GitGutterDeleteLine','SignifyLineDelete','DiffDelete',desc='Used for deleted lines in previews.'}},{GitSignsCurrentLineBlame={'NonText',desc='Used for current line blame.'}},{GitSignsAddInline={'TermCursor',desc='Used for added word diff regions in inline previews.'}},{GitSignsDeleteInline={'TermCursor',desc='Used for deleted word diff regions in inline previews.'}},{GitSignsChangeInline={'TermCursor',desc='Used for changed word diff regions in inline previews.'}},{GitSignsAddLnInline={'GitSignsAddInline',desc='Used for added word diff regions when `config.word_diff == true`.'}},{GitSignsChangeLnInline={'GitSignsChangeInline',desc='Used for changed word diff regions when `config.word_diff == true`.'}},{GitSignsDeleteLnInline={'GitSignsDeleteInline',desc='Used for deleted word diff regions when `config.word_diff == true`.'}},{GitSignsDeleteVirtLn={'GitGutterDeleteLine','SignifyLineDelete','DiffDelete',desc='Used for deleted lines shown by inline `preview_hunk_inline()` or `show_deleted()`.'}},{GitSignsDeleteVirtLnInLine={'GitSignsDeleteLnInline',desc='Used for word diff regions in lines shown by inline `preview_hunk_inline()` or `show_deleted()`.'}},{GitSignsVirtLnum={'GitSignsDeleteVirtLn',desc='Used for line numbers in inline hunks previews.'}}}local function c(d)local e,f=pcall(a.nvim_get_hl_by_name,d,true)if not e then return false end;local g=f.foreground or f.background or f.reverse;return g~=nil end;local function h(i,j)if not i or j==1 then return i end;local k=math.floor(i/2^16)local l=i-k*2^16;local m=math.floor(l/2^8)local n=math.floor(l-m*2^8)return math.floor(math.floor(k*j)*2^16+math.floor(m*j)*2^8+math.floor(n*j))end;local function o(p,...)require('gitsigns.debug.log').dprintf(p,...)end;local function q(f,r)for s,t in ipairs(r)do if c(t)then o('Deriving %s from %s',f,t)if r.fg_factor or r.bg_factor then r.fg_factor=r.fg_factor or 1;r.bg_factor=r.bg_factor or 1;local u=a.nvim_get_hl_by_name(t,true)a.nvim_set_hl(0,f,{default=true,fg=h(u.foreground,r.fg_factor),bg=h(u.background,r.bg_factor)})else a.nvim_set_hl(0,f,{default=true,link=t})end;return end end;if r[1]and not r.bg_factor and not r.fg_factor then o('Deriving %s from %s',f,r[1])a.nvim_set_hl(0,f,{default=true,link=r[1]})else o('Could not derive %s',f)end end;function b.setup_highlights()for s,v in ipairs(b.hls)do for f,r in pairs(v)do if c(f)then o('Highlight %s is already defined',f)else q(f,r)end end end end;return b
