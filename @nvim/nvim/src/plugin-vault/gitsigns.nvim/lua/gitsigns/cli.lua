local a=require('gitsigns.async')local b=require('gitsigns.async').void;local c=require('gitsigns.debug.log')local d=c.dprintf;local e=require('gitsigns.message')local f=require('gitsigns.cli.argparse').parse_args;local g=require('gitsigns.actions')local h=require('gitsigns.attach')local i=require('gitsigns.debug')local j={[g]=true,[h]=false,[i]=false}local function k(l)if tonumber(l)then return tonumber(l)elseif l=='false'or l=='true'then return l=='true'elseif l=='nil'then return nil end;return l end;local m={}function m.complete(n,o)local p=vim.split(o,'%s+')local q=#p;local r={}if q==2 then for s,t in pairs(j)do for u,t in pairs(s)do if not u:match('^[a-z]')then elseif vim.startswith(u,n)then table.insert(r,u)end end end elseif q>2 then local v=g._get_cmp_func(p[2])if v then return v(n)end end;return r end;local function w(x)if x~=nil then print(vim.inspect(x))end end;m.run=b(function(y)local z='cli.run'local A,B=f(y.args)local u=A[1]if not u then u=a.wrap(vim.ui.select,3)(m.complete('','Gitsigns '),{})end;local C=vim.tbl_map(k,vim.list_slice(A,2))local D=vim.tbl_map(k,B)local E=vim.tbl_extend('error',C,D)d("Running action '%s' with arguments %s",u,vim.inspect(E,{newline=' ',indent=''}))local F=g._get_cmd_func(u)if F then w(F(E,y))return end;for s,G in pairs(j)do local H=s[u]if type(H)=='function'then w(H(unpack(C),G and D or nil))return end end;e.error('%s is not a valid function or action',u)end)return m
