local a=vim.api;local b=vim.F.npcall;local function c(d,e)vim.schedule(function()if e and vim.list_contains(e,a.nvim_get_current_buf())then return end;local f="preview_window_"..d;pcall(a.nvim_del_augroup_by_name,f)pcall(a.nvim_win_close,d,true)end)end;local function g(h,d,e)local f=a.nvim_create_augroup("preview_window_"..d,{clear=true})a.nvim_create_autocmd("BufEnter",{group=f,callback=function()c(d,e)end})if#h>0 then a.nvim_create_autocmd(h,{group=f,buffer=e[2],callback=function()c(d)end})end end;local function i(j,k)for l,m in ipairs(a.nvim_list_wins())do if b(a.nvim_win_get_var,m,j)==k then return m end end end;function vim.lsp.util.open_floating_preview(n,o,p)vim.validate({contents={n,"t"},syntax={o,"s",true},opts={p,"t",true}})p=p or{}p.wrap=p.wrap~=false;p.stylize_markdown=p.stylize_markdown~=false and vim.g.syntax_on~=nil;p.focus=p.focus~=false;p.close_events=p.close_events or{"CursorMoved","CursorMovedI","InsertCharPre"}local q=a.nvim_get_current_buf()if p.focus_id and p.focusable~=false and p.focus then local r=a.nvim_get_current_win()if b(a.nvim_win_get_var,r,p.focus_id)then a.nvim_command("wincmd p")return q,r end;do local m=i(p.focus_id,q)if m and a.nvim_win_is_valid(m)and vim.fn.pumvisible()==0 then a.nvim_set_current_win(m)a.nvim_command("stopinsert")return a.nvim_win_get_buf(m),m end end end;local s=b(a.nvim_buf_get_var,q,"lsp_floating_preview")if s and a.nvim_win_is_valid(s)then a.nvim_win_close(s,true)end;local t=a.nvim_create_buf(false,true)local u=o=="markdown"and p.stylize_markdown;n=vim.split(table.concat(n,"\n"),"\n",{trimempty=true})if u then n=vim.lsp.util.stylize_markdown(t,n,p)else if o then vim.bo[t].syntax=o end;a.nvim_buf_set_lines(t,0,-1,true,n)end;if p.wrap then p.wrap_at=p.wrap_at or a.nvim_win_get_width(0)else p.wrap_at=nil end;local v,w=vim.lsp.util._make_floating_popup_size(n,p)local x=vim.lsp.util.make_floating_popup_options(v,w,p)local y=a.nvim_open_win(t,false,x)if u then vim.wo[y].conceallevel=2;vim.wo[y].concealcursor="n"end;vim.wo[y].foldenable=false;vim.wo[y].wrap=p.wrap;vim.bo[t].modifiable=false;vim.bo[t].bufhidden="wipe"a.nvim_buf_set_keymap(t,"n","q","<cmd>bdelete<cr>",{silent=true,noremap=true,nowait=true})g(p.close_events,y,{t,q})if p.focus_id then a.nvim_win_set_var(y,p.focus_id,q)end;a.nvim_buf_set_var(q,"lsp_floating_preview",y)return t,y end
