local a={}local b=require("nvim-lsp-extras.config")local c=require("vim.lsp.util")local d,e;local function f(g,h,i)local j=vim.lsp.get_active_clients({bufnr=h})if not j then return end;local k=false;for l,m in pairs(j)do if m.supports_method("textDocument/hover")then k=true;break end end;if not k then return end;local n=g.line-1;local o=g.column;i=i or c._get_offset_encoding(h)local p=vim.api.nvim_buf_get_lines(h,n,n+1,true)[1]if not p or#p<o then return nil end;o=c._str_utfindex_enc(p,o,i)return{line=n,character=o}end;local q=function(g,h,i)i=i or c._get_offset_encoding(h)local r=f(g,h,i)if not r then return nil end;return{textDocument=c.make_text_document_params(h),position=r}end;local function s(l,t,l,u)u={border=b.get("global").border or b.get("mouse_hover").border,relative="mouse",max_height=11}if not(t and t.contents)then return end;local v=c.convert_input_to_markdown_lines(t.contents,{})v=c.trim_empty_lines(v)if vim.tbl_isempty(v)or#v==1 and v[1]==""then return end;d,e=c.open_floating_preview(v,"markdown",u)return d,e end;local w=function(h)if h~=d then if e and vim.api.nvim_win_is_valid(e)then vim.schedule(function()vim.api.nvim_win_close(e,true)e=nil end)end end end;local x={"TelescopePrompt"}a.setup=function(m)if not m.supports_method("textDocument/hover")then return end;local y=nil;vim.o.mousemoveevent=true;vim.api.nvim_create_autocmd({"FocusLost","FocusGained"},{pattern="*",group=vim.api.nvim_create_augroup("HoverFocusClear",{clear=true}),callback=function()local g=vim.fn.getmousepos()local h=vim.api.nvim_win_get_buf(g.winid)w(h)end})vim.keymap.set({"","i"},"<MouseMove>",function()if y then y:close()end;y=vim.defer_fn(function()y=nil;for l,z in pairs(vim.fn.getwininfo())do if vim.tbl_contains(x,vim.bo[z.bufnr].ft)then return end end;local g=vim.fn.getmousepos()local h=vim.api.nvim_win_get_buf(g.winid)w(h)local A=q(g,h)if not A then return end;vim.lsp.buf_request(h,"textDocument/hover",A,s)end,500)return"<MouseMove>"end,{expr=true})end;return a
