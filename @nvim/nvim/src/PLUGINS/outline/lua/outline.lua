local a=vim.api;local b=vim.api.nvim_create_autocmd;local c=a.nvim_list_uis()[1]local d=require("plenary.popup")require'split'local e={}function e.setup(f)e.main_win=nil;e.main_buf=nil;e.main_win_width=50;e.main_win_height=20;e.main_win_style="minimal"e.main_win_relavent="win"e.main_win_border='double'e.main_col=c.width/2-e.main_win_width/2;e.main_row=c.height/2-e.main_win_height/2;e.preview_win=nil;e.preview_buf=nil;e.preview_win_width=c.width/2;e.preview_win_height=c.height/2;e.preview_win_style="minimal"e.preview_win_relavent="win"e.preview_win_border='double'e.preview_col=e.main_win_width/2-e.preview_win_width/2;e.preview_row=e.main_win_height/2-e.preview_win_height/2;e.custom_keys={}end;function e.open()e.back_win=a.nvim_get_current_win()if not e.main_buf and not e.main_win then e.main_buf=a.nvim_create_buf(false,true)local g={"─","│","─","│","╭","╮","╯","╰"}local h,i=d.create(e.main_buf,{title="Outline - Buffers",highlight="OutlineWindow",line=math.floor((vim.o.lines-5)/2-1),col=math.floor((vim.o.columns-e.main_win_width)/2),minwidth=e.main_win_width,minheight=5,borderchars=g})e.main_win=h;e.build_win()e.setKeys(e.back_win,e.main_buf)e.add_custom_keys()else xpcall(function()a.nvim_win_close(e.main_win,false)a.nvim_buf_delete(e.main_buf,{})e.main_win=nil;e.main_buf=nil end,function()e.main_win=nil;e.main_buf=nil;e.open()end)end end;function e.add_custom_keys()for j,k in pairs(e.custom_keys)do a.nvim_buf_set_keymap(e.main_buf,'n',k.key,string.format([[:<C-U>lua require'outline'.set_saved_buffer(%s,%s)<CR>]],e.back_win,tonumber(k.buffer)),{nowait=true,noremap=true,silent=true})end end;function e.set_saved_buffer(i,l)a.nvim_win_set_buf(i,tonumber(l))e.close()end;function e.openPreview(l)e.preview_buf=a.nvim_create_buf(false,true)e.preview_win_width=math.floor(e.preview_win_width)e.preview_win_height=math.floor(e.preview_win_height)local m=a.nvim_win_get_cursor(e.main_win)m[1]=m[1]-1;local n=a.nvim_buf_get_lines(l,m[1],-1,false)[1]local o=tonumber(n:split(" ")[1])e.preview_buf=o;local p=e.preview_win_width;local q=e.preview_win_height;local g={"─","│","─","│","╭","╮","╯","╰"}local h,i=d.create(e.preview_buf,{title="Outline - Buffers",highlight="OutlineWindow",line=math.floor((vim.o.lines-q)/2-1),col=math.floor((vim.o.columns-p)/2),maxwidth=p,maxheight=q,borderchars=g,minheight=q,minwidth=p})e.preview_win=h;a.nvim_buf_set_option(e.preview_buf,'modifiable',false)e.setPreviewKeys(e.preview_buf)end;function e.setPreviewKeys(l)a.nvim_buf_set_keymap(0,'n','q',':lua require"outline".close_preview()<CR>',{nowait=true,noremap=true,silent=true})end;function e.close_preview()a.nvim_win_close(e.preview_win,false)a.nvim_buf_delete(e.preview_buf,{})e.preview_win=nil;e.preview_buf=nil;a.nvim_set_current_win(e.main_win)end;function e.close()if e.main_win then a.nvim_win_close(e.main_win,false)a.nvim_buf_delete(e.main_buf,{})e.main_win=nil;e.main_buf=nil;if e.preview_buf~=nil then e.close_preview()end end end;function e.setKeys(i,l)a.nvim_buf_set_keymap(l,'n','<CR>',string.format([[:<C-U>lua require'outline'.set_buffer(%s,%s, 'window', vim.v.count)<CR>]],i,l),{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','s',string.format([[:<C-U>lua require'outline'.set_buffer(%s,%s, 'hsplit', vim.v.count)<CR>]],i,l),{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','v',string.format([[:<C-U>lua require'outline'.set_buffer(%s,%s, 'vsplit', vim.v.count)<CR>]],i,l),{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','P',string.format([[:<C-U>lua require'outline'.openPreview(%s)<CR>]],l),{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','D',string.format([[:<C-U>lua require'outline'.close_buffer(%s)<CR>]],l),{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','B',string.format([[:<C-U>lua require'outline'.open_input_window(%s)<CR>]],l),{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','q',':lua require"outline".close()<CR>',{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','<Esc>',':lua require"outline".close()<CR>',{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','<Tab>','j',{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'n','<S-Tab>','k',{nowait=true,noremap=true,silent=true})end;function e.build_win()a.nvim_buf_set_option(e.main_buf,"modifiable",true)e.list_buffers()a.nvim_buf_set_option(e.main_buf,"modifiable",false)end;function e.list_buffers()local r=a.nvim_list_bufs()local s={}table.sort(r)local t=a.nvim_get_current_buf()for u,o in ipairs(r)do if a.nvim_buf_is_loaded(o)then local v=a.nvim_buf_get_name(o)if v==""or nil then goto w end;local x=a.nvim_buf_get_option(o,'modified')local y=a.nvim_buf_get_number(o)local z=""if y==t then z=""end;local A=x and'﨣'or''local B=e.main_win_width-#v-20;local C=string.len(v)if C>B then v="..."..string.sub(v,1-B)end;for D,E in pairs(e.custom_keys)do if E.buffer==y then v=string.format("%s %s",E.key.." ",v)end end;s[#s+1]=string.format("%s %s %s %s",y,v,z,A)::w::end end;if#s~=0 then a.nvim_buf_set_lines(e.main_buf,0,#s,false,s)end end;function e.set_buffer(i,l,f)local m=a.nvim_win_get_cursor(e.main_win)m[1]=m[1]-1;local n=a.nvim_buf_get_lines(l,m[1],-1,false)[1]local o=tonumber(n:split(" ")[1])if f=='window'then a.nvim_win_set_buf(i,tonumber(o))elseif f=='hsplit'then a.nvim_command('vsplit')a.nvim_win_set_buf(a.nvim_get_current_win(),o)elseif f=='vsplit'then a.nvim_command('split')a.nvim_win_set_buf(a.nvim_get_current_win(),o)end;e.close()end;function e.close_buffer(l)local m=a.nvim_win_get_cursor(e.main_win)local n=a.nvim_buf_get_lines(l,m[1]-1,-1,false)[1]local o=tonumber(n:split(' ')[1])vim.cmd(string.format('bd %s',o))e.close()e.open()end;function e.open_input_window()e.input_buf=a.nvim_create_buf(false,true)local F,G=pcall(vim.api.nvim_buf_get_var,e.input_buf,'lsp_enabled')local g={"─","│","─","│","╭","╮","╯","╰"}local h,i=d.create(e.input_buf,{title="Input Keybinding:",highlight="OutlineWindow",line=math.floor((vim.o.lines-1)/2-1),col=math.floor((vim.o.columns-20)/2),minwidth=20,height=1,borderchars=g})e.input_win=h;e.set_input_keys(e.input_buf)a.nvim_buf_set_option(e.input_buf,'omnifunc','v:lua.vim.lsp.omnifunc')a.nvim_win_set_option(e.input_win,'cursorline',true)a.nvim_set_current_win(e.input_win)a.nvim_win_set_cursor(e.input_win,{1,0})a.nvim_command('startinsert')a.nvim_buf_set_option(e.input_buf,'modifiable',true)end;function e.set_input_keys(l)a.nvim_buf_set_keymap(l,'i','<CR>','<Esc>:lua require"outline".bind_key_to_buffer()<CR>',{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'i','<C-c>','<Esc>:lua require"outline".close_input_window()<CR>',{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'i','q','<Esc>:lua require"outline".close_input_window()<CR>',{nowait=true,noremap=true,silent=true})a.nvim_buf_set_keymap(l,'i','<Esc>','<Esc>:lua require"outline".close_input_window()<CR>',{nowait=true,noremap=true,silent=true})end;function e.close_input_window()a.nvim_win_close(e.input_win,true)e.input_buf=nil;e.input_win=nil end;function e.bind_key_to_buffer()local H=a.nvim_win_get_cursor(e.main_win)H[1]=H[1]-1;local n=a.nvim_buf_get_lines(e.main_buf,H[1],-1,false)[1]local o=tonumber(n:split(" ")[1])local m=a.nvim_win_get_cursor(e.input_win)local I=a.nvim_buf_get_lines(e.input_buf,m[1]-1,-1,false)[1]a.nvim_buf_set_keymap(e.main_buf,'n',I,string.format([[:<C-U>lua require'outline'.set_buffer(%s,%s, 'window', vim.v.count)<CR>]],e.back_win,e.main_buf),{nowait=true,noremap=true,silent=true})for u,k in pairs(e.custom_keys)do if k.key==I then vim.notify('Key already exists')a.nvim_command('startinsert')return else if k.buffer==o then k.key=I;vim.notify('Buffer binding changed.')e.close_input_window()e.close()e.open()return end end end;e.custom_keys[#e.custom_keys+1]={key=I,buffer=o,window=e.back_win,opt='window'}e.close_input_window()vim.notify('Buffer binding added.')e.close()e.open()end;return e
