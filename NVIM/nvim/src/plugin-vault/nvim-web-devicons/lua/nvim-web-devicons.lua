local a={}local b,c,d;function a.get_icons()return b end;local function e()local f;if vim.o.background=="light"then f=require"nvim-web-devicons.icons-light"else f=require"nvim-web-devicons.icons-default"end;c=f.icons_by_filename;d=f.icons_by_file_extension;b=vim.tbl_extend("keep",{},c,d)end;local g={["avif"]="avif",["bzl"]="bzl",["brewfile"]="brewfile",["commit"]="commit_editmsg",["copying"]="copying",["gemfile"]="gemfile$",["lesser"]="copying.lesser",["vagrantfile"]="vagrantfile$",["aac"]="aac",["awk"]="awk",["bmp"]="bmp",["c"]="c",["cfg"]="cfg",["clojure"]="clj",["cmake"]="cmake",["cobol"]="cobol",["coffee"]="coffee",["conf"]="conf",["cp"]="cp",["cpp"]="cpp",["cr"]="cr",["cs"]="cs",["csh"]="csh",["cson"]="cson",["css"]="css",["csv"]="csv",["d"]="d",["dart"]="dart",["desktop"]="desktop",["diff"]="diff",["doc"]="doc",["docx"]="docx",["dockerfile"]="dockerfile",["dosbatch"]="bat",["dosini"]="ini",["drools"]="drl",["dropbox"]="dropbox",["dump"]="dump",["eex"]="eex",["ejs"]="ejs",["elixir"]="ex",["elm"]="elm",["epuppet"]="epp",["erlang"]="erl",["eruby"]="erb",["fennel"]="fnl",["fish"]="fish",["flac"]="flac",["forth"]="fs",["fortran"]="f90",["fsharp"]="f#",["fsi"]="fsi",["fsscript"]="fsscript",["fsx"]="fsx",["gd"]="gd",["gif"]="gif",["git"]="git",["gitconfig"]=".gitconfig",["gitcommit"]="commit_editmsg",["gitignore"]=".gitignore",["gitattributes"]=".gitattributes",["glb"]="glb",["go"]="go",["godot"]="godot",["graphql"]="graphql",["gql"]="gql",["gruntfile"]="gruntfile",["gulpfile"]="gulpfile",["haml"]="haml",["haskell"]="hs",["hbs"]="hbs",["heex"]="heex",["html"]="html",["ico"]="ico",["idlang"]="pro",["import"]="import",["java"]="java",["javascript"]="js",["javascript.jsx"]="jsx",["javascriptreact"]="jsx",["jpeg"]="jpeg",["jpg"]="jpg",["json"]="json",["jsonc"]="jsonc",["json5"]="json5",["julia"]="jl",["kotlin"]="kt",["leex"]="leex",["less"]="less",["liquid"]="liquid",["lhaskell"]="lhs",["license"]="license",["unlicense"]="unlicense",["log"]="log",["lock"]="lock",["lprolog"]="sig",["lua"]="lua",["make"]="makefile",["markdown"]="markdown",["material"]="material",["m4a"]="m4a",["m4v"]="m4v",["mdx"]="mdx",["mint"]="mint",["mkv"]="mkv",["motoko"]="mo",["mov"]="mov",["mp3"]="mp3",["mp4"]="mp4",["mustache"]="mustache",["nim"]="nim",["nix"]="nix",["node"]="node_modules",["ocaml"]="ml",["ogg"]="ogg",["opus"]="opus",["otf"]="otf",["pck"]="pck",["pdf"]="pdf",["perl"]="pl",["php"]="php",["plaintex"]="tex",["png"]="png",["postscr"]="ai",["ppt"]="ppt",["prisma"]="prisma",["procfile"]="procfile",["prolog"]="pro",["ps1"]="ps1",["psd1"]="psd1",["psm1"]="psm1",["psb"]="psb",["psd"]="psd",["puppet"]="pp",["pyc"]="pyc",["pyd"]="pyd",["pyo"]="pyo",["python"]="py",["query"]="query",["r"]="r",["res"]="rescript",["resi"]="rescript",["rlib"]="rlib",["rmd"]="rmd",["rproj"]="rproj",["ruby"]="rb",["rust"]="rs",["sass"]="sass",["sbt"]="sbt",["scala"]="scala",["scheme"]="scm",["scss"]="scss",["sh"]="sh",["slim"]="slim",["sln"]="sln",["sml"]="sml",["solidity"]="sol",["sql"]="sql",["sqlite"]="sqlite",["sqlite3"]="sqlite3",["styl"]="styl",["sublime"]="sublime",["suo"]="suo",["svelte"]="svelte",["svg"]="svg",["swift"]="swift",["systemverilog"]="sv",["tads"]="t",["tcl"]="tcl",["terminal"]="terminal",["tex"]="tex",["toml"]="toml",["tres"]="tres",["tscn"]="tscn",["twig"]="twig",["txt"]="txt",["typescript"]="ts",["typescriptreact"]="tsx",["vala"]="vala",["verilog"]="v",["vhdl"]="vhd",["vim"]="vim",["vue"]="vue",["wasm"]="wasm",["wav"]="wav",["webm"]="webm",["webp"]="webp",["webpack"]="webpack",["xcplayground"]="xcplayground",["xls"]="xls",["xlsx"]="xlsx",["xml"]="xml",["yaml"]="yaml",["zig"]="zig",["zsh"]="zsh"}local h={icon="ïƒ¶",color="#6d8086",cterm_color="66",name="Default"}local i={override={},strict=false,default=false,color_icons=true}local function j(k)if not i.color_icons then k=h end;return k.name and"DevIcon"..k.name end;local l=vim.api.nvim_set_hl;local function m(n)if not i.color_icons then n=h end;local o=j(n)if o and(n.color or n.cterm_color)then l(0,j(n),{fg=n.color,ctermfg=tonumber(n.cterm_color)})end end;local p=vim.api.nvim_get_hl_by_name;local function q(r)if not r then return end;local s,t=pcall(p,r,true)return s and not(t or{})[true]end;function a.set_up_highlights(u)if not i.color_icons then m(h)return end;for v,n in pairs(b)do local w=n.color or n.cterm_color;local x=n.name;local y=q(j(n))if w and x and(u or not y)then m(n)end end end;local function z(n)if not i.color_icons then n=h end;return string.format("#%06x",p(j(n),true).foreground)end;local function A(n)if not i.color_icons then n=h end;return p(j(n),false).foreground end;local B=false;function a.has_loaded()return B end;local C=vim.F.if_nil;function a.setup(D)if B then return end;B=true;local E=D or{}if E.default then i.default=true end;if E.strict then i.strict=true end;i.color_icons=C(E.color_icons,i.color_icons)if E.override and E.override.default_icon then h=E.override.default_icon end;local F=E.override_by_filename;local G=E.override_by_extension;b=vim.tbl_extend("force",b,E.override or{},F or{},G or{})if F then c=vim.tbl_extend("force",c,F)end;if G then d=vim.tbl_extend("force",d,G)end;table.insert(b,h)a.set_up_highlights()vim.api.nvim_create_autocmd("ColorScheme",{desc="Re-apply icon colors after changing colorschemes",group=vim.api.nvim_create_augroup("NvimWebDevicons",{clear=true}),callback=a.set_up_highlights})end;function a.get_default_icon()return h end;local function H(I,J)if I==nil then return nil end;local K=I:match"%.(.*)"local L=J[K]if L then return L end;return H(K,J)end;local function M(I,N,D)local O=C(D and D.strict,i.strict)local J=O and d or b;if N~=nil then return J[N]end;return H(I,J)end;function a.get_icon(I,N,D)if type(I)=="string"then I=I:lower()end;if not B then a.setup()end;local P=C(D and D.default,i.default)local O=C(D and D.strict,i.strict)local n;if O then n=c[I]or M(I,N,D)or P and h else n=b[I]or M(I,N,D)or P and h end;if n then return n.icon,j(n)end end;function a.get_icon_name_by_filetype(Q)return g[Q]end;function a.get_icon_by_filetype(Q,D)local I=a.get_icon_name_by_filetype(Q)D=D or{}D.strict=false;return a.get_icon(I or"",nil,D)end;function a.get_icon_colors(I,N,D)if not B then a.setup()end;local P=C(D and D.default,i.default)local O=C(D and D.strict,i.strict)local n;if O then n=c[I]or M(I,N,D)or P and h else n=b[I]or M(I,N,D)or P and h end;if n then local R=n.color;local S=n.cterm_color;if n.name and q(j(n))then R=z(n)or R;S=A(n)or S end;return n.icon,R,S end end;function a.get_icon_colors_by_filetype(Q,D)local I=a.get_icon_name_by_filetype(Q)return a.get_icon_colors(I or"",nil,D)end;function a.get_icon_color(I,N,D)local k={a.get_icon_colors(I,N,D)}return k[1],k[2]end;function a.get_icon_color_by_filetype(Q,D)local I=a.get_icon_name_by_filetype(Q)D=D or{}D.strict=false;return a.get_icon_color(I or"",nil,D)end;function a.get_icon_cterm_color(I,N,D)local k={a.get_icon_colors(I,N,D)}return k[1],k[3]end;function a.get_icon_cterm_color_by_filetype(Q,D)local I=a.get_icon_name_by_filetype(Q)return a.get_icon_cterm_color(I or"",nil,D)end;function a.set_icon(E)b=vim.tbl_extend("force",b,E or{})if not i.color_icons then return end;for v,n in pairs(E)do m(n)end end;function a.set_default_icon(L,R,S)h.icon=L;h.color=R;h.cterm_color=S;m(h)end;e()function a.refresh()e()a.set_up_highlights(true)end;vim.api.nvim_create_autocmd("OptionSet",{pattern="background",callback=a.refresh})return a
