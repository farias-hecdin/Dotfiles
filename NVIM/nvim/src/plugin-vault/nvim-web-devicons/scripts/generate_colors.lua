local a=vim.fn;local function b(c,d)print(c.."\n")vim.cmd("cq "..d)end;if not jit then b("Neovim must be LuaJIT-enabled to source this script",1)end;if a.filereadable"lua/nvim-web-devicons.lua"==0 then b("lua/nvim-web-devicons.lua not found",1)end;local d,e=pcall(vim.fn["colortemplate#colorspace#approx"],"#000000")if not d then b(e.."\nlifepillar/vim-colortemplate not present in &runtimepath '"..vim.o.runtimepath.."'",1)end;vim.o.autoindent=true;local f=255*7/8;local g=255*6/8;local h=255*5/8;local i=255/2;local j=255/3;local function k(l)local m,n,o=l:match"%#(%x%x)(%x%x)(%x%x)"m,n,o=tonumber("0x"..m),tonumber("0x"..n),tonumber("0x"..o)local p=0.299*m+0.587*n+0.114*o;if p<j then return l elseif p<i then m=bit.tohex(m/4*3):sub(-2)n=bit.tohex(n/4*3):sub(-2)o=bit.tohex(o/4*3):sub(-2)elseif p<h then m=bit.tohex(m/3*2):sub(-2)n=bit.tohex(n/3*2):sub(-2)o=bit.tohex(o/3*2):sub(-2)elseif p<g then m=bit.tohex(m/2):sub(-2)n=bit.tohex(n/2):sub(-2)o=bit.tohex(o/2):sub(-2)elseif p<f then m=bit.tohex(m/3):sub(-2)n=bit.tohex(n/3):sub(-2)o=bit.tohex(o/3):sub(-2)else m=bit.tohex(m/5):sub(-2)n=bit.tohex(n/5):sub(-2)o=bit.tohex(o/5):sub(-2)end;return string.format("#%s%s%s",m,n,o)end;local function q()vim.cmd":1"local r=0;while true do local s=a.search"^\\s*color ="if s<r then break end;r=s;local t=vim.api.nvim_get_current_line():match"%#......"local u=a["colortemplate#colorspace#approx"](t).index;if a.search"^\\s*cterm_color"==s+1 then vim.cmd(string.format("s/=.*/= %q,",u))else vim.cmd(tostring(s))vim.cmd.normal(string.format("octerm_color = %q,",u))end end end;local function v()local w=a.line"."-1;a.search"^}"local x=a.line"."local y=vim.api.nvim_buf_get_lines(a.bufnr(),w,x,true)for z=1,#y do if y[z]:find"^%s*color ="then local l=y[z]:match'"(#%x%x%x%x%x%x)"'if not l then b(string.format("invalid color at line %s: '%s'",z,y[z]),1)end;y[z]=y[z]:gsub(l,k)end end;table.insert(y,"")return y end;if a.filereadable"lua/nvim-web-devicons/icons-default.lua"==0 then b("lua/nvim-web-devicons/icons-default.lua not found",1)end;vim.cmd"noswapfile drop lua/nvim-web-devicons/icons-default.lua"print"Generating file with icons for light backgrounds..."vim.cmd":1"if a.search("^local icons_by_filename","c")==0 then b("Table 'icons_by_filename' not found in lua/nvim-web-devicons/icons-default.lua",1)end;local y=v()if a.search("^local icons_by_file_extension","c")==0 then b("Table 'icons_by_file_extension' not found in lua/nvim-web-devicons/icons-default.lua",1)end;local A=v()if a.search("^local icons_by_operating_system","c")==0 then b("Table 'icons_by_operating_system' not found in lua/nvim-web-devicons/icons-default.lua",1)end;local B=v()table.insert(B,"return {")table.insert(B,"  icons_by_filename = icons_by_filename,")table.insert(B,"  icons_by_file_extension = icons_by_file_extension,")table.insert(B,"  icons_by_operating_system = icons_by_operating_system,")table.insert(B,"}")a.writefile(y,"lua/nvim-web-devicons/icons-light.lua")a.writefile(A,"lua/nvim-web-devicons/icons-light.lua","a")a.writefile(B,"lua/nvim-web-devicons/icons-light.lua","a")print"Finished creating new file!"print"Generating cterm colors for dark background...\n"q()vim.cmd"wall!"print"Finished!"if a.filereadable"lua/nvim-web-devicons/icons-light.lua"==0 then b("lua/nvim-web-devicons/icons-light.lua not found",1)end;vim.cmd"noswapfile drop lua/nvim-web-devicons/icons-light.lua"print"Generating cterm colors for light background...\n"q()vim.cmd":1"vim.cmd"wall!"print"Finished!\n"
