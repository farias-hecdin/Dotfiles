local a=require("jit")assert(20100<=a.version_num and a.version_num<=20199,"LuaJIT core/library version mismatch: "..a.version)local b=require("jit.profile")local c=require("jit.vmdef")local math=math;local pairs,ipairs,tonumber,d=pairs,ipairs,tonumber,math.floor;local e,f=table.sort,string.format;local g=io.stdout;local h;local i;local j;local k,l,m,n,o,p;local q,r,s,t;local u={N="Compiled",I="Interpreted",C="C code",G="Garbage Collector",J="JIT Compiler"}local function v(w,x,y)t=t+x;local z,A,B;if k then if k=="v"then B=u[y]or y else B=h:get()or"(none)"end end;if o then z=b.dumpstack(w,o,p)z=z:gsub("%[builtin#(%d+)%]",function(C)return c.ffnames[tonumber(C)]end)if l==2 then local D,E=z:match("(.-) [<>] (.*)")if E then z,A=D,E end elseif l==3 then A=b.dumpstack(w,"l",1)end end;local D,E;if l==1 then if B then D=B;if z then E=z end end elseif z then D=z;if A then E=A elseif B then E=B end end;if D then local F=r;F[D]=(F[D]or 0)+x;if E then local G=s;local H=G[D]if not H then H={}G[D]=H end;H[E]=(H[E]or 0)+x end end end;local function I(J,K,x,L)local M,N={},0;for O in pairs(J)do N=N+1;M[N]=O end;e(M,function(P,Q)return J[P]>J[Q]end)for R=1,N do local O=M[R]local S=J[O]local T=d(S*100/x+0.5)if T<m then break end;if not n then i:write(f("%s%2d%%  %s\n",L,T,O))elseif n=="r"then i:write(f("%s%5d  %s\n",L,S,O))else i:write(f("%s %d\n",O,S))end;if K then local U=K[O]if U then I(U,nil,S,(l==3 or l==1)and"  -- "or(p<0 and"  -> "or"  <- "))end end end end;local function V(J,x)local W={}local X=0;for O,S in pairs(J)do local T=d(S*100/x+0.5)X=math.max(X,S)if T>=m then local Y,Z=O:match("^(.*):(%d+)$")if not Y then Y=O;Z=0 end;local _=W[Y]if not _ then _={}W[Y]=_;W[#W+1]=Y end;Z=tonumber(Z)_[Z]=n and S or T end end;e(W)local a0,a1=" %3d%% | %s\n","      | %s\n"if n then local N=math.max(5,math.ceil(math.log10(X)))a0="%"..N.."d | %s\n"a1=(" "):rep(N).." | %s\n"end;local a2=q;for a3,Y in ipairs(W)do local a4=Y:byte()if a4==40 or a4==91 then i:write(f("\n====== %s ======\n[Cannot annotate non-file]\n",Y))break end;local a5,a6=io.open(Y)if not a5 then i:write(f("====== ERROR: %s: %s\n",Y,a6))break end;i:write(f("\n====== %s ======\n",Y))local _=W[Y]local N,a7=1,false;if a2~=0 then for R=1,a2 do if _[R]then a7=true;i:write("@@ 1 @@\n")break end end end;for Z in a5:lines()do if Z:byte()==27 then i:write("[Cannot annotate bytecode file]\n")break end;local S=_[N]if a2~=0 then local a8=_[N+a2]if a7 then if a8 then a7=N+a2 elseif S then a7=N elseif a7+a2<N then a7=false end elseif a8 then a7=N+a2;i:write(f("@@ %d @@\n",N))end;if not a7 then goto a9 end end;if S then i:write(f(a0,S,Z))else i:write(f(a1,Z))end::a9::N=N+1 end;a5:close()end end;local function aa()if j then b.stop()local x=t;if x==0 then if n~=true then i:write("[No samples collected]\n")end;return end;if q then V(r,x)else I(r,s,x,"")end;r=nil;s=nil;j=nil;if i~=g then i:close()end end end;local function ab(ac)local ad=""ac=ac:gsub("i%d*",function(ae)ad=ae;return""end)m=3;ac=ac:gsub("m(%d+)",function(ae)m=tonumber(ae)return""end)p=1;ac=ac:gsub("%-?%d+",function(ae)p=tonumber(ae)return""end)local af={}for ag in ac:gmatch(".")do af[ag]=ag end;k=af.z or af.v;if k=="z"then h=require("jit.zone")end;local ah=af.l or af.f or af.F or(k and""or"f")local ai=af.p or""n=af.r;if af.s then l=2;if p==-1 or af["-"]then p=-2 elseif p==1 then p=2 end elseif ac:find("[fF].*l")then ah="l"l=3 else l=(ah==""or ac:find("[zv].*[lfF]"))and 1 or 0 end;q=af.A and 0 or af.a and 3;if q then ah="l"o="pl"l=0;p=1 elseif af.G and ah~=""then o=ai..ah.."Z;"p=-100;n=true;m=0 elseif ah==""then o=false else local aj=l==3 and af.f or af.F or ah;o=ai..aj..(p>=0 and"Z < "or"Z > ")end;r={}s={}t=0;b.start(ah:lower()..ad,v)j=newproxy(true)getmetatable(j).__gc=aa end;local function ak(ac,al)if not al then al=os.getenv("LUAJIT_PROFILEFILE")end;if al then i=al=="-"and g or assert(io.open(al,"w"))else i=g end;ab(ac or"f")end;return{start=ak,stop=aa}
