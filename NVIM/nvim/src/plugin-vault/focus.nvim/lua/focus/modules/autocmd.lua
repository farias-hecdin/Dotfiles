local a=require('focus.modules.utils')local vim=vim;local b={}local function c()local d='auto'if vim.opt.signcolumn:get()=='no'then return d else return vim.opt.signcolumn:get()end end;function b.setup(e)local f=vim.api.nvim_create_augroup('Focus',{clear=true})if a.is_disabled()then return end;if e.autoresize.enable then local g=0;vim.api.nvim_create_autocmd('WinEnter',{group=f,callback=function(h)if not vim.fn.has('nvim-0.9')then vim.api.nvim_exec_autocmds('WinScrolled',{})end;require('focus').resize()end,desc='Resize splits'})end;if e.ui.signcolumn then vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.signcolumn=c()end,desc='Enable signcolumn'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)vim.wo.signcolumn='no'end,desc='Disable signcolumn'})end;if e.ui.cursorline then vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.cursorline=true end,desc='Enable cursorline'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.cursorline=false end,desc='Disable cursorline'})end;if e.ui.number then vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=true end,desc='Enable cursorline'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)vim.wo.number=false end,desc='Disable cursorline'})end;if e.ui.relativenumber then if e.ui.absolutenumber_unfocussed then vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=false;vim.wo.relativenumber=true end,desc='Absolutnumber unfoccused enter'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=true;vim.wo.relativenumber=false end,desc='Absolutnumber unfoccused leave'})else vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=false;vim.wo.relativenumber=true end,desc='Absolutnumber foccused enter'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=false;vim.wo.relativenumber=false end,desc='Absolutnumber foccused leave'})end end;if e.ui.hybridnumber then if e.ui.absolutenumber_unfocussed then vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)vim.wo.number=true;vim.wo.relativenumber=true end,desc='Absolutenumber unfoccused enter'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=true;vim.wo.relativenumber=false end,desc='Absolutenumber unfoccused leave'})else vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=true;vim.wo.relativenumber=true end,desc='Hybrid number enter'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.number=false;vim.wo.relativenumber=false end,desc='Hybrid number leave'})end end;if e.ui.cursorcolumn then vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.cursorcolumn=true end,desc='Cursor column enter'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.cursorcolumn=false end,desc='Cursor column leave'})end;if e.ui.colorcolumn.enable then vim.api.nvim_create_autocmd({'BufEnter','WinEnter'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.colorcolumn=e.ui.colorcolumn.list end,desc='Color column enter'})vim.api.nvim_create_autocmd({'BufLeave','WinLeave'},{group=f,callback=function(h)if a.is_disabled()then return end;vim.wo.colorcolumn=''end,desc='Color column leave'})end end;return b
