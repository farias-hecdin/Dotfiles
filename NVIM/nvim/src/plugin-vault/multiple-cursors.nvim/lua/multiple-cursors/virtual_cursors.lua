local a={}local b=require("multiple-cursors.common")local c=require("multiple-cursors.extmarks")local d=require("multiple-cursors.virtual_cursor")local e={}local f=false;local function g()for h=#e,1,-1 do if e[h].delete then c.delete_virtual_cursor_extmarks(e[h])table.remove(e,h)end end end;local function i()if#e<2 then return end;for j=1,#e-1 do for k=j+1,#e do if e[j]==e[k]then e[k].delete=true end end end;g()end;function a.get_num_virtual_cursors()return#e end;function a.sort()table.sort(e)end;function a.add(l,m,n)for h=1,#e do local o=e[h]if o.col==m and o.lnum==l then return end end;table.insert(e,d.new(l,m,n))c.update_virtual_cursor_extmarks(e[#e])end;function a.add_or_delete(l,m)local p=false;for h=1,#e do local o=e[h]if o.col==m and o.lnum==l then o.delete=true;p=true end end;if p then g()else a.add(l,m,m)end end;function a.clear()e={}end;function a.update_extmarks()for q,o in ipairs(e)do c.update_virtual_cursor_extmarks(o)end end;function a.set_ignore_cursor_movement(r)f=r end;function a.cursor_moved()if f then return end;local s=vim.fn.getcurpos()for h=#e,1,-1 do local o=e[h]if o.within_buffer then c.update_virtual_cursor_position(o)o.editable=not(o.lnum==s[2]and o.col==s[3])c.update_virtual_cursor_extmarks(o)end end end;function a.visit_all(t)local u=vim.fn.getcurpos()local v=vim.wo.ve;if b.is_mode_insert_replace()then vim.wo.ve="onemore"end;for h=1,#e do local o=e[h]if o.within_buffer then c.update_virtual_cursor_position(o)end;if not o.delete then t(o,h)c.update_virtual_cursor_extmarks(o)end end;if b.is_mode_insert_replace()then vim.wo.ve=v end;vim.fn.cursor({u[2],u[3],u[4],u[5]})g()i()end;function a.visit_in_buffer(t)a.visit_all(function(o,h)if o.within_buffer then t(o,h)end end)end;function a.visit_with_cursor(t)f=true;a.visit_in_buffer(function(o,h)o:set_cursor_position()t(o,h)end)f=false end;function a.move_with_normal_command(w,x)a.visit_with_cursor(function(o)b.normal_bang(nil,w,x,nil)o:save_cursor_position()if b.is_mode_insert_replace()then if o.curswant==vim.v.maxcol then o.col=b.get_max_col(o.lnum)end end end)end;function a.edit(t)f=true;c.save_cursor()a.visit_in_buffer(function(o,h)if o.editable then t(o,h)end end)c.restore_cursor()f=false end;function a.edit_with_cursor(t)a.edit(function(o,h)o:set_cursor_position()t(o,h)end)end;function a.edit_with_normal_command(w,x,y)a.edit_with_cursor(function(o)b.normal_bang(nil,w,x,y)o:save_cursor_position()end)end;function a.normal_mode_delete_yank(z,w,x,y)a.edit_with_cursor(function(o,h)b.normal_bang(z,w,x,y)o:save_register(z)o:save_cursor_position()end)end;function a.normal_mode_put(z,w,x)local A=true;for q,o in ipairs(e)do if o.editable and not o:has_register(z)then A=false;break end end;if not A then local B=vim.fn.getreginfo(z)if next(B)==nil then return end end;a.edit_with_cursor(function(o,h)local B=nil;if A then B=vim.fn.getreginfo(z)o:set_register(z)end;b.normal_bang(z,w,x,nil)o:save_cursor_position()if B then vim.fn.setreg(z,B)end end)end;local function C(D)vim.cmd("normal!:")vim.api.nvim_buf_set_mark(0,"<",D[1],D[2]-1,{})vim.api.nvim_buf_set_mark(0,">",D[3],D[4]-1,{})vim.cmd("normal! gv")end;function a.visual_mode_modify_area(t)f=true;local E=b.get_visual_area()a.visit_in_buffer(function(o,h)o:set_visual_area()t(o,h)o:save_visual_area()end)C(E)f=false end;function a.visual_mode_edit(t)f=true;c.save_visual_area()a.visit_in_buffer(function(o,h)o:set_visual_area()t(o,h)o:save_cursor_position()o.visual_start_lnum=0;o.visual_start_col=0 end)c.restore_visual_area()f=false end;function a.visual_mode_delete_yank(z,x)a.visual_mode_edit(function(o,h)b.normal_bang(z,0,x,nil)o:save_register(z)end)end;function a.can_split_paste(F)local w=0;for h=1,#e do local o=e[h]if o.within_buffer and o.editable then w=w+1 end end;return w+1==F end;function a.reorder_lines_for_split_pasting(G)a.sort()local H=vim.fn.getcurpos()local I=0;for h=1,#e do local o=e[h]if o.lnum==H[2]then if o.col>H[3]then I=h;break end else if o.lnum>H[2]then I=h;break end end end;if I~=0 then local J=table.remove(G,I)table.insert(G,J)end end;return a
