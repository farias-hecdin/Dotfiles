local a={}local b=require("multiple-cursors.common")local c=require("multiple-cursors.virtual_cursors")local d=require("multiple-cursors.insert_mode")local e=require("multiple-cursors.input")local f=nil;local g=nil;local h=nil;local function i()c.move_with_normal_command(0,"l")end;local function j()c.move_with_normal_command(0,"$")end;local function k()c.visit_in_buffer(function(l)l.curswant=l.col end)end;local function m()c.move_with_normal_command(0,"^")end;local function n()c.move_with_normal_command(0,"$")d.all_virtual_cursors_carriage_return()end;local function o()c.visit_in_buffer(function(l)if l.lnum==1 then l.col=1;l.curswant=1 else l.lnum=l.lnum-1;l.col=b.get_col(l.lnum,vim.v.maxcol)l.curswant=vim.v.maxcol end end)c.edit_with_cursor(function(l)if l.lnum==1 and l.col==1 then d.virtual_cursor_carriage_return(l)l.lnum=1 else d.virtual_cursor_carriage_return(l)end end)end;local function p()c.visit_in_buffer(function(l)l.visual_start_lnum=l.lnum;l.visual_start_col=l.col;if g>0 then l.col=b.get_col(l.lnum,l.col+g)l.curswant=l.col end end)end;local q={["j"]=true,["k"]=true,["+"]=true,["-"]=true}local function r(s,t)if s=="_"then b.normal_bang(nil,0,"O",nil)return end;if q[s]and t>1 then b.normal_bang(nil,0,"O",nil)end end;local function u()local s=h:sub(#h,#h)local v=""if#h>1 then v=h:sub(1,#h-1)end;if s=="_"then if v~=""then g=g+tonumber(v)h="_"end;g=vim.fn.max({1,g})end;local w=vim.v.register;local x=vim.wo.ve;vim.wo.ve="onemore"b.normal_bang(w,g,"d",h)r(s,vim.fn.getreginfo(w))vim.wo.ve=x;c.edit_with_cursor(function(l,y)b.normal_bang(w,g,"d",h)local t=l:save_register(w)r(s,t)l:save_cursor_position()end)h=nil end;local function z()local w=vim.v.register;c.move_with_normal_command(0,"0")d.all_virtual_cursors_carriage_return()c.normal_mode_delete_yank(w,g,"dd",nil)c.move_with_normal_command(0,"k")b.normal_bang(w,g,"dd",nil)b.normal_bang(nil,0,"O",nil)end;local function A()local w=vim.v.register;if vim.fn.getcurpos()[3]==1 and g>1 then b.normal_bang(w,g,"D",nil)b.normal_bang(nil,0,"O",nil)else b.normal_bang(w,g,"D",nil)b.feedkeys(nil,0,"<Right>",nil)end;c.edit_with_cursor(function(l,y)if l.col==1 and g>1 then b.normal_bang(w,g,"D",nil)b.normal_bang(nil,0,"O",nil)else b.normal_bang(w,g,"D",nil)end;l:save_register(w)l:save_cursor_position()end)end;local function B()local w=vim.v.register;c.normal_mode_delete_yank(w,g,"d","l")local x=vim.wo.ve;vim.wo.ve="onemore"b.normal_bang(w,g,"dl",nil)vim.wo.ve=x end;function a.mode_changed()if f==nil then return elseif f=="a"then i()elseif f=="A"then j()elseif f=="i"then k()elseif f=="I"then m()elseif f=="o"then n()elseif f=="O"then o()elseif f=="v"then p()elseif f=="c"then u()elseif f=="cc"then z()elseif f=="C"then A()elseif f=="s"then B()end;g=nil;f=nil end;function a.a()b.feedkeys(nil,0,"a",nil)f="a"end;function a.A()b.feedkeys(nil,0,"A",nil)f="A"end;function a.i()b.feedkeys(nil,0,"i",nil)f="i"end;function a.I()b.feedkeys(nil,0,"I",nil)f="I"end;function a.o()b.feedkeys(nil,0,"o",nil)f="o"end;function a.O()b.feedkeys(nil,0,"O",nil)f="O"end;function a.v()b.feedkeys(nil,vim.v.count,"v",nil)g=vim.v.count-1;f="v"end;function a.c()g=vim.v.count;h=e.get_motion_cmd()if h==nil then g=nil else f="c"b.feedkeys(nil,0,"i",nil)end end;function a.cc()g=vim.v.count;f="cc"b.feedkeys(nil,0,"i",nil)end;function a.C()g=vim.v.count;f="C"b.feedkeys(nil,0,"i",nil)end;function a.s()g=vim.v.count;f="s"b.feedkeys(nil,0,"i",nil)end;return a
