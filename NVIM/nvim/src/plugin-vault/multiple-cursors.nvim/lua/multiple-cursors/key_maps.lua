local a={}local b=require("multiple-cursors.virtual_cursors")local c=require("multiple-cursors.common")local d=require("multiple-cursors.input")default_key_maps={}disabled_default_key_maps={}custom_key_maps={}local e={}function a.setup(f,g,h)default_key_maps=f;disabled_default_key_maps=g;custom_key_maps=h end;function a.has_custom_keys_maps()return next(custom_key_maps)~=nil end;local function i(j)if type(j)=="table"then return j else return{j}end end;local function k(l,m,n)if next(l)==nil then return false end;for o=1,#l do local p=i(l[o][1])local q=i(l[o][2])for r=1,#p do for s=1,#q do if m==p[r]and n==q[s]then return true end end end end;return false end;local function t(m,n)return not k(custom_key_maps,m,n)and not k(disabled_default_key_maps,m,n)end;local function u(m,n)local v=vim.fn.maparg(n,m,false,true)if v["buffer"]~=nil then table.insert(e,{m,v})end end;function a.save_existing()for o=1,#default_key_maps do local p=i(default_key_maps[o][1])local q=i(default_key_maps[o][2])for r=1,#p do for s=1,#q do if t(p[r],q[s])then u(p[r],q[s])end end end end;for o=1,#custom_key_maps do local w=i(custom_key_maps[o][1])local x=i(custom_key_maps[o][2])for r=1,#w do for s=1,#x do u(w[r],x[s])end end end end;function a.restore_existing()for o=1,#e do local m=e[o][1]local v=e[o][2]vim.fn.mapset(m,false,v)end;e={}end;local function y(z)local A=vim.v.register;local B=vim.v.count1;z(A,B)b.edit_with_cursor(function(C)z(A,B)C:save_cursor_position()end)end;local function D(z)local A=vim.v.register;local B=vim.v.count1;local E=d.get_motion_cmd()if E==nil then return end;z(A,B,E)b.edit_with_cursor(function(C)z(A,B,E)C:save_cursor_position()end)end;local function F(z)local A=vim.v.register;local B=vim.v.count1;local G=d.get_char()if G==nil then return end;z(A,B,G)b.edit_with_cursor(function(C)z(A,B,G)C:save_cursor_position()end)end;local function H(z)local A=vim.v.register;local B=vim.v.count1;local E=d.get_motion_cmd()if E==nil then return end;local G=d.get_char()if G==nil then return end;z(A,B,E,G)b.edit_with_cursor(function(C)z(A,B,E,G)C:save_cursor_position()end)end;function a.set_custom()for o=1,#custom_key_maps do custom_key_map=custom_key_maps[o]local w=i(custom_key_map[1])local x=i(custom_key_map[2])local z=custom_key_map[3]local I=function()y(z)end;if#custom_key_map>=4 then local J=custom_key_map[4]if J=="m"then I=function()D(z)end elseif J=="c"then I=function()F(z)end elseif J=="mc"then I=function()H(z)end end end;for r=1,#w do for s=1,#x do vim.keymap.set(w[r],x[s],I)end end end end;function a.set()for o=1,#default_key_maps do local p=i(default_key_maps[o][1])local q=i(default_key_maps[o][2])local z=default_key_maps[o][3]for r=1,#p do for s=1,#q do if t(p[r],q[s])then vim.keymap.set(p[r],q[s],z)end end end end;a.set_custom()end;function a.delete()for o=1,#default_key_maps do local p=i(default_key_maps[o][1])local q=i(default_key_maps[o][2])for r=1,#p do for s=1,#q do if t(p[r],q[s])then vim.keymap.del(p[r],q[s])end end end end;for o=1,#custom_key_maps do local w=i(custom_key_maps[o][1])local x=i(custom_key_maps[o][2])local z=custom_key_maps[o][3]for r=1,#w do for s=1,#x do vim.keymap.del(w[r],x[s])end end end end;return a
