local a={}local b=require("multiple-cursors.common")local c=require("multiple-cursors.virtual_cursors")local d=require("multiple-cursors.visual_mode")local e=nil;local f=nil;function a.setup(g)e=g end;local function h(i,j)local k=j.col<b.get_max_col(j.lnum)vim.api.nvim_put(i,"c",true,true)if k then vim.cmd("normal! h")end end;local function l(i,j)vim.api.nvim_put(i,"c",false,true)end;local function m(i,j)if j.col==b.get_max_col(j.lnum)then vim.api.nvim_put(i,"c",false,false)else if#i~=1 then vim.cmd("normal! \"_D")vim.api.nvim_put(i,"c",true,false)else local n=#i[1]local o=b.get_length_of_line(j.lnum)-j.col+1;if n<o then vim.cmd("normal! \"_"..tostring(n).."dl")vim.api.nvim_put(i,"c",false,false)else vim.cmd("normal! \"_D")vim.api.nvim_put(i,"c",true,false)end end end end;local function p(i,j)lnum1,col1,lnum2,col2=j:get_normalised_visual_area()local q=col2>=b.get_max_col(lnum2)-1;b.normal_bang("_",0,"d",nil)local r=vim.fn.getcurpos()local s=r[3]>=b.get_max_col(r[2])if q and s then vim.api.nvim_put(i,"c",true,true)else vim.api.nvim_put(i,"c",false,true)vim.cmd("normal! h")end end;local function t(i)local u=e and c.can_split_paste(#i)if u then c.reorder_lines_for_split_pasting(i)end;if b.is_mode("v")then c.visual_mode_edit(function(j,v)if u then p({i[v]},j)else p(i,j)end end)else local w=nil;local x=true;if b.is_mode("n")then w=h elseif b.is_mode("i")then w=l elseif b.is_mode("R")then w=m;x=false end;if w then c.edit_with_cursor(function(j,v)if u then w({i[v]},j)else w(i,j)end;if x then j:save_cursor_position()end end)end end;if u then return{i[#i]}else return i end end;function a.override_handler()f=vim.paste;vim.paste=(function(y)return function(i,z)return y(t(i),z)end end)(vim.paste)end;function a.revert_handler()vim.paste=f end;return a
