local a={}local vim=vim;local b=require('outline.utils.config')local c=require('outline.utils.scripts')function a.get_sorted_buffers()local d=vim.api.nvim_list_bufs()table.sort(d)return d end;function a.get_buffer_info(e)if not vim.api.nvim_buf_is_loaded(e)then return nil end;local f=vim.api.nvim_buf_get_number(e)local g,h=c.get_icon(e)if f<9 then g=" "..g end;local i=vim.api.nvim_buf_get_name(e)if i==""or nil then return end;local j=vim.fn.fnamemodify(i,":t")i=string.sub(i,1,#i-#j)return{id=f,icon=g,name=i,filename=j}end;function a.format_buffer_info(k,l)local m=""if k.id==l then m=b.options.active_icon end;local n=b.options.window_width-20-(#k.filename+#k.icon+#m)if#k.name>n then k.name=c.truncate_text(k.name,#k.name-n)end;for h,o in pairs(b.options.custom_keys)do if o.buffer==k.id then k.name=string.format("%s %s",o.key.." ",k.name)end end;return string.format("%s %s %s (%s) %s",k.id,k.icon,k.filename,k.name,m)end;function a.get_buffer_list(d,l)local p={}for h,e in ipairs(d)do local k=a.get_buffer_info(e)if k then p[#p+1]=a.format_buffer_info(k,l)end end;return p end;function a.update_main_buffer(p)if#p~=0 then vim.api.nvim_buf_set_lines(b.options.main_buf,0,#p,false,p)end end;return a
