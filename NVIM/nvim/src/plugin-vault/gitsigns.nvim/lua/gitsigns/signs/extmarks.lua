local a=vim.api;local b=require('gitsigns.config').config;local c={}local d='gitsigns_extmark_signs_'function c._new(e,f,g)local self=setmetatable({},{__index=c})self.config=e;self.hls=f;self.group=d..(g or'')self.ns=a.nvim_create_namespace(self.group)return self end;function c:on_lines(h,i,j,k)if j>k then self:remove(h,k+1,j)end end;function c:remove(l,m,n)if m then a.nvim_buf_clear_namespace(l,self.ns,m-1,n or m)else a.nvim_buf_clear_namespace(l,self.ns,0,-1)end end;function c:add(l,o)if not b.signcolumn and not b.numhl and not b.linehl then return end;for i,p in ipairs(o)do if not self:contains(l,p.lnum)then local q=self.config[p.type]local r=q.text;if b.signcolumn and q.show_count and p.count then local s=p.count;local t=b.count_chars;local u=t[s]or t['+']or''r=q.text..u end;local f=self.hls[p.type]local v,w=pcall(a.nvim_buf_set_extmark,l,self.ns,p.lnum-1,-1,{id=p.lnum,sign_text=b.signcolumn and r or'',priority=b.sign_priority,sign_hl_group=f.hl,number_hl_group=b.numhl and f.numhl or nil,line_hl_group=b.linehl and f.linehl or nil})if not v and b.debug_mode then vim.schedule(function()error(table.concat({string.format('Error placing extmark on line %d',p.lnum),w},'\n'))end)end end end end;function c:contains(l,x,y)local z=a.nvim_buf_get_extmarks(l,self.ns,{x-1,0},{y or x,0},{limit=1})return#z>0 end;function c:reset()for i,h in ipairs(a.nvim_list_bufs())do self:remove(h)end end;return c
