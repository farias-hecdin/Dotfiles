local a=require("md_section_number.heading.parser")local b=require("md_section_number.heading.replacer")local c=require("md_section_number.toc")local d={}local e={max_level=4,ignore_pairs={{"```","```"},{"\\~\\~\\~","\\~\\~\\~"},{"<!--","-->"}},toc={width=30,position="right",indent_space_number=2,header_prefix="- "}}local function f(g)return vim.tbl_deep_extend("force",e,g or{})end;local function h(i,j,k)if i==-1 or j==-1 then return true end;if i==nil or j==nil then return true end;return i<=k and k<=j end;function d.setup(g)local l=f(g)if not l then return end;a.setup(l)b.setup(l)c.setup(l.toc)end;local function m(...)local n=a.get_heading_lines(vim.api.nvim_buf_get_lines(0,0,-1,false))local o={}if select("#",...)==3 then local i,j,p=...for q,r in ipairs(n)do if h(i,j,r[1]+1)then table.insert(o,b.change_heading_level(r,p))else table.insert(o,r)end end else o=n end;return n,o end;function d._update_heading_number(s,i,j,...)local n,o=m(i,j,...)o=b.insert_heading_number(o)if nil==o or#o==0 then return end;for t,r in ipairs(o)do local u=r[1]local v=r[2]local w=n[t][2]local x=r[3]local y=r[4]local z=b.replaceHeadingNumber(v,y,x,s)if w~=z and h(i,j,u+1)then b.update_line(u,string.len(w),z)end end end;function d.update_heading_number(A,B)d._update_heading_number(false,A,B)end;function d.clear_heading_number(A,B)d._update_heading_number(true,A,B)end;function d.header_decrease(A,B)d._update_heading_number(true,A,B,-1)end;function d.header_increase(A,B)d._update_heading_number(true,A,B,1)end;function d.toggle_toc()c.toggle()end;return d
