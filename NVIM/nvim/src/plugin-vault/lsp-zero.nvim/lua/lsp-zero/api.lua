local a={}local b={lsp_project_configs={}}a.noop=function()end;function a.cmp_action()return require('lsp-zero.cmp-mapping')end;function a.cmp_format(c)return require('lsp-zero.cmp').format(c)end;function a.extend_cmp(c)require('lsp-zero.cmp').extend(c)end;function a.extend_lspconfig()local d=require('lsp-zero.server')if d.setup_done then return end;if d.has_configs()then local e='[lsp-zero] Some language servers have been configured before\n'..'you called the function .extend_lspconfig().\n\n'..'Solution: Go to the place where you use lspconfig for the first time.\n'..'Call the .extend_lspconfig() function before you setup the language server'vim.notify(e,vim.log.levels.WARN)return end;d.has_lspconfig=true;d.extend_lspconfig()end;function a.setup_servers(f,c)if type(f)~='table'then return end;c=c or{}local d=require('lsp-zero.server')local g=c.exclude or{}for h,i in ipairs(f)do if not vim.tbl_contains(g,i)then d.setup(i,{})end end end;function a.configure(i,c)local d=require('lsp-zero.server')a.store_config(i,c)d.setup(i,c)end;function a.default_setup(i)require('lsp-zero.server').setup(i,{})end;function a.on_attach(j)local d=require('lsp-zero.server')if type(j)=='function'then d.common_attach=j end end;function a.set_server_config(c)if type(c)=='table'then local d=require('lsp-zero.server')d.default_config=c end end;function a.build_options(i,c)local d=require('lsp-zero.server')d.skip_setup(i)local k={capabilities=d.client_capabilities(),on_attach=function()end}return vim.tbl_deep_extend('force',k,d.default_config or{},c or{})end;function a.store_config(i,c)if type(c)=='table'then b.lsp_project_configs[i]=c end end;function a.use(l,c)if type(l)=='string'then l={l}end;local m=vim.api.nvim_get_current_buf()local n=not(vim.bo.filetype=='')local o=vim.api.nvim_get_current_buf()local p=require('lspconfig')local q=c or{}for h,i in ipairs(l)do local r=vim.tbl_deep_extend('force',b.lsp_project_configs[i]or{},q)local s=p[i]s.setup(r)if s.manager and n then pcall(function()s.manager:try_add_wrapper(o)end)end end end;function a.nvim_lua_ls(c)return require('lsp-zero.server').nvim_workspace(c)end;function a.set_sign_icons(c)require('lsp-zero.server').set_sign_icons(c)end;function a.default_keymaps(c)c=c or{buffer=0}require('lsp-zero.server').default_keymaps(c)end;function a.get_capabilities()return require('lsp-zero.server').client_capabilities()end;function a.highlight_symbol(...)require('lsp-zero.server').highlight_symbol(...)end;function a.new_client(c)if type(c)~='table'then return end;local i=c.name or''local r=a.build_options(i,c)require('lsp-zero.client').setup(r)end;function a.format_on_save(c)return require('lsp-zero.format').format_on_save(c)end;function a.format_mapping(...)return require('lsp-zero.format').format_mapping(...)end;function a.buffer_autoformat(...)return require('lsp-zero.format').buffer_autoformat(...)end;function a.async_autoformat(...)return require('lsp-zero.format').async_autoformat(...)end;a.dir={}function a.dir.find_all(f)return require('lsp-zero.dir').find_all(f)end;function a.dir.find_first(f)return require('lsp-zero.dir').find_first(f)end;a.omnifunc={}function a.omnifunc.setup(c)require('lsp-zero.omnifunc').setup(c)end;return a
