if vim.g.loaded_lsp_zero==1 then return{ok=false}end;vim.g.loaded_lsp_zero=1;local a={}a.ok=true;a.done=false;local function b(c)local d={}if c.bang then d.root_dir=function()return vim.fn.get_cwd()end end;require('lsp-zero').use(c.fargs,d)end;vim.api.nvim_create_user_command('LspZeroSetupServers',b,{bang=true,nargs='*'})vim.api.nvim_create_user_command('LspZeroWorkspaceAdd','lua vim.lsp.buf.add_workspace_folder()',{})vim.api.nvim_create_user_command('LspZeroWorkspaceList','lua vim.notify(vim.inspect(vim.lsp.buf.list_workspace_folders()))',{})local function e(c)local f=c.args;local g='lua/lspconfig/server_configurations/%s.lua'local h=vim.api.nvim_get_runtime_file(g:format(f),0)if h[1]==nil then local i="[lsp-zero] Could not find configuration for '%s'"vim.notify(i:format(f),vim.log.levels.WARN)return end;vim.cmd.sview({args={h[1]},mods={vertical=true}})end;local function j(k)local g='lua/lspconfig/server_configurations'local h=vim.api.nvim_get_runtime_file(g,0)[1]local l='%s/*.lua'local m=vim.split(vim.fn.glob(l:format(h)),'\n')local n={}for o,p in ipairs(m)do local q=vim.fn.fnamemodify(p,':t:r')if vim.startswith(q,k)then n[#n+1]=q end end;return n end;vim.api.nvim_create_user_command('LspZeroViewConfigSource',e,{nargs=1,complete=j})local r=vim.api.nvim_create_augroup('lsp_zero_attach',{clear=true})local function s(t)local u=require('lsp-zero.server')local v=t.buf;u.set_buf_commands(v)if u.common_attach then local w=vim.tbl_get(t,'data','client_id')local x={}if w then x=vim.lsp.get_client_by_id(w)end;u.common_attach(x,v)end end;vim.api.nvim_create_autocmd('LspAttach',{group=r,desc='lsp-zero on_attach',callback=s})local function y()local z=vim.g.lsp_zero_extend_lspconfig;if z==false or z==0 then return end;local A=vim.g.lspconfig==1 or#vim.api.nvim_get_runtime_file('doc/lspconfig.txt',0)>0;if not A then local B=function()if vim.g.lspconfig~=1 then return end;local u=require('lsp-zero.server')if u.setup_done then return end;local C='[lsp-zero] Could not configure lspconfig\n'..'during initial setup. Some features may fail.'..'\n\nDetails on how to solve this problem are in the help page.\n'..'Execute the following command\n\n:help lsp-zero-guide:fix-extend-lspconfig'vim.notify(C,vim.log.levels.WARN)end;vim.api.nvim_create_autocmd('LspAttach',{once=true,callback=B})return end;local u=require('lsp-zero.server')if u.has_configs()then local C='[lsp-zero] Some language servers have been configured before\n'..'lsp-zero could finish its initial setup. Some features may fail.'..'\n\nDetails on how to solve this problem are in the help page.\n'..'Execute the following command\n\n:help lsp-zero-guide:fix-extend-lspconfig'vim.notify(C,vim.log.levels.WARN)return end;u.has_lspconfig=true;u.extend_lspconfig()end;local function D()local E=vim.g.lsp_zero_extend_cmp;if E==0 or E==false then return end;local F=vim.g.loaded_cmp;if F==true then require('lsp-zero.cmp').apply_base()return end;if F==0 or F==false then return end;vim.api.nvim_create_autocmd('User',{pattern='CmpReady',once=true,callback=function()require('lsp-zero.cmp').apply_base()end})end;function a.extend_plugins()if a.done then return false end;a.done=true;y()D()return true end;local G=vim.g.lsp_zero_ui_float_border;if G==nil then G='rounded'end;if type(G)=='string'then vim.lsp.handlers['textDocument/hover']=vim.lsp.with(vim.lsp.handlers.hover,{border=G})vim.lsp.handlers['textDocument/signatureHelp']=vim.lsp.with(vim.lsp.handlers.signature_help,{border=G})vim.diagnostic.config({float={border=G}})end;local H=vim.g.lsp_zero_ui_signcolumn;if H==nil and vim.o.signcolumn=='auto'or H==1 or H==true then vim.o.signcolumn='yes'end;return a
