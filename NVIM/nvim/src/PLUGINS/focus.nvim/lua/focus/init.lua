local a=require('focus.modules.config')local b=require('focus.modules.commands')local c=require('focus.modules.autocmd')local d=require('focus.modules.split')local e=require('focus.modules.functions')local f=require('focus.modules.resizer')local g={}g.setup=function(h)setmetatable(g,{__newindex=a.set,__index=a.get})if h~=nil then for i,j in pairs(h)do a.defaults[i]=j end end;a.verify()if g.enable then vim.g.enabled_focus_resizing=1;c.setup(g)b.setup()if g.winhighlight then vim.cmd('hi default link FocusedWindow VertSplit')vim.cmd('hi default link UnfocusedWindow Normal')vim.wo.winhighlight='Normal:FocusedWindow,NormalNC:UnfocusedWindow'end;if a.autoresize then g.resize()end end end;g.run_cmd=function(k)c.run_cmd(g,k)end;g.resize=function()f.split_resizer(g)end;function g.split_nicely(l)d.split_nicely(l,g.bufnew)end;function g.split_command(m,l)l=l or''d.split_command(m,l,g.tmux,g.bufnew)end;function g.split_cycle(n)d.split_cycle(n,g.bufnew)end;function g.focus_enable()e.focus_enable()end;function g.focus_disable()e.focus_disable()end;function g.focus_toggle()e.focus_toggle()end;function g.focus_maximise()e.focus_maximise()end;function g.focus_equalise()e.focus_equalise()end;function g.focus_max_or_equal()e.focus_max_or_equal()end;function g.focus_disable_window()table.insert(g.excluded_windows,vim.api.nvim_get_current_win())end;function g.focus_enable_window()for i,o in pairs(g.excluded_windows)do if o==vim.api.nvim_get_current_win()then table.remove(g.excluded_windows,i)end end end;function g.focus_toggle_window()for p,o in pairs(g.excluded_windows)do if o==vim.api.nvim_get_current_win()then g.focus_enable_window()return end end;g.focus_disable_window()end;function g.focus_get_disabled_windows()print('------------------')print('█▀ ▄▀▄ ▄▀▀ █ █ ▄▀▀')print('█▀ ▀▄▀ ▀▄▄ ▀▄█ ▄██')print('------------------')print('Disabled Windows')for p,o in pairs(g.excluded_windows)do print('- '..o)end;print('-------------------')print('Current Window')print('- '..vim.api.nvim_get_current_win())print('-------------------')end;return g
