local a=require('focus.modules.utils')local vim=vim;local b=vim.api.nvim_command;local c={}local d=1.618;local function e(f,g,h)local i=a.split(g,' ')if i[1]~=''and i[1]~='cmd'then b('edit '..i[1])elseif i[1]=='cmd'and i[2]~=nil then b('enew')local j=table.concat(i,' ',2)b(j)elseif f==true and h==true then b('enew')end end;local k=function(l)local m=vim.o.columns;local n=vim.fn.winwidth(l)local o=vim.bo.textwidth;if o>0 and n>math.floor(o*d)then return'vsplit'end;if n>math.floor(m/d)then return'vsplit'end;return'split'end;local function p(q)if q=='h'then return'l'elseif q=='l'then return'h'elseif q=='j'then return'k'elseif q=='k'then return'j'end end;local r=function(s)return string.match(s,'Vim([a-z]split):E36:.*')end;function c.split_nicely(g,h)local l=vim.api.nvim_get_current_win()local t=k(l)if#vim.api.nvim_tabpage_list_wins(0)==4 then b('wincmd w')end;local u,v=xpcall(b,r,t)if v then if t=='split'then vim.o.minwinheight=vim.o.minwinheight/2 else vim.o.minwinwidth=vim.o.minwinwidth/2 end end;if t=='vsplit'and not vim.o.splitright then b('wincmd p')end;if t=='split'and not vim.o.splitbelow then b('wincmd p')end;e(true,g,h)end;function c.split_command(q,g,w,h)local l=vim.api.nvim_get_current_win()local f=false;if c.split_exists_direction(l,q)==false then f=true;if w==true then vim.fn.system('tmux select-pane -'..vim.fn.tr(q,'phjkl','lLDUR'))elseif q=='h'or q=='l'then b('wincmd v')b('wincmd '..q)elseif q=='j'or q=='k'then b('wincmd s')b('wincmd '..q)end else b('wincmd '..q)end;e(f,g,h)end;function c.split_cycle(x,h)local l=vim.api.nvim_get_current_win()if x=='reverse'then b('wincmd W')else b('wincmd w')end;if l==vim.api.nvim_get_current_win()then b('wincmd v')if x==nil or x~='reverse'then b('wincmd w')end;if h==true then b('enew')end end end;function c.split_exists_direction(l,q)b('wincmd '..q)if l==vim.api.nvim_get_current_win()then return false else b('wincmd '..p(q))return true end end;return c
