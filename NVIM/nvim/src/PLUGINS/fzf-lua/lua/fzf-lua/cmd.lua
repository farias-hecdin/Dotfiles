local a=require"fzf-lua"local b=require"fzf-lua.utils"local c={}local d={["nil"]=nil,['""']="",['"']=""}local e={["false"]=false,["true"]=true}local function f(g)local h={["boolean"]=function(i,j)if j=="false"then g[i]=false;return end;g[i]=true end,["number"]=function(i,j)g[i]=tonumber(j)end,["string"]=function(i,j)if d[j]~=nil then g[i]=d[j]return end;if e[j]~=nil then g[i]=e[j]end end}local k={__index=function(l,m)b.info(string.format("Type of %s does not match",m))end}setmetatable(h,k)for i,j in pairs(g)do h["string"](i,j)end end;local function n(o)local g=o or{}if next(g)==nil or not g.cmd then b.info("missing command args")return end;local p=g.cmd;local q=g.opts or{}if next(q)~=nil then f(q)end;if a[p]then a[p](q)else b.info(string.format("invalid command '%s'",p))end end;function c.load_command(p,...)local o={...}if p==nil then n{cmd="builtin"}return end;local g={}g["cmd"]=p;g.opts={}for l,r in ipairs(o)do local s=vim.split(r,"=")g.opts[s[1]]=s[2]end;n(g)end;return c
