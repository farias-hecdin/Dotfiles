local a=require('cmp_buffer.buffer')local b={keyword_length=3,keyword_pattern=[[\%(-\?\d\+\%(\.\d\+\)\?\|\h\%(\w\|á\|Á\|é\|É\|í\|Í\|ó\|Ó\|ú\|Ú\)*\%(-\%(\w\|á\|Á\|é\|É\|í\|Í\|ó\|Ó\|ú\|Ú\)*\)*\)]],get_bufnrs=function()return{vim.api.nvim_get_current_buf()}end,indexing_batch_size=1000,indexing_interval=100,max_indexed_line_length=1024*40}local c={}c.new=function()local self=setmetatable({},{__index=c})self.buffers={}return self end;c._validate_options=function(d,e)local f=vim.tbl_deep_extend('keep',e.option,b)vim.validate({keyword_length={f.keyword_length,'number'},keyword_pattern={f.keyword_pattern,'string'},get_bufnrs={f.get_bufnrs,'function'},indexing_batch_size={f.indexing_batch_size,'number'},indexing_interval={f.indexing_interval,'number'}})return f end;c.get_keyword_pattern=function(self,e)local f=self:_validate_options(e)return f.keyword_pattern end;c.complete=function(self,e,g)local f=self:_validate_options(e)local h=false;local i=self:_get_buffers(f)for d,j in ipairs(i)do if j.timer:is_active()then h=true;break end end;vim.defer_fn(function()local k=string.sub(e.context.cursor_before_line,e.offset)local l={}local m={}for d,j in ipairs(i)do for d,n in ipairs(j:get_words())do for o,d in pairs(n)do if not m[o]and k~=o then m[o]=true;table.insert(l,{label=o,dup=0})end end end end;g({items=l,isIncomplete=h})end,h and 100 or 0)end;c._get_buffers=function(self,f)local p={}for d,q in ipairs(f.get_bufnrs())do if not self.buffers[q]then local r=a.new(q,f)r.on_close_cb=function()self.buffers[q]=nil end;r:start_indexing_timer()r:watch()self.buffers[q]=r end;table.insert(p,self.buffers[q])end;return p end;c._get_distance_from_entry=function(self,s)local j=self.buffers[s.context.bufnr]if j then local t=j:get_words_distances(s.context.cursor.line+1)return t[s.completion_item.filterText]or t[s.completion_item.label]end end;c.compare_locality=function(self,u,v)if u.context~=v.context then return end;local w=self:_get_distance_from_entry(u)or math.huge;local x=self:_get_distance_from_entry(v)or math.huge;if w~=x then return w<x end end;return c
