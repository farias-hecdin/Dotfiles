local a,b=require"bit",require"ffi"local c,d,e,f=a.band,a.bor,a.rshift,a.lshift;local g=vim.loop;local h={}local i=b.new"uint8_t[256]"local j=f(1,0)local k=f(1,1)local l=f(1,2)local m=d(k,j)do local n=string.byte;local o={["0"]=n"0",["9"]=n"9",["a"]=n"a",["f"]=n"f",["z"]=n"z"}for p=0,255 do local q=0;local r=d(p,0x20)if p>=o["0"]and p<=o["9"]then q=d(q,f(1,0))q=d(q,f(1,2))q=d(q,f(p-o["0"],4))elseif r>=o["a"]and r<=o["z"]then q=d(q,f(1,1))if r<=o["f"]then q=d(q,f(1,2))q=d(q,f(r-o["a"]+10,4))end end;i[p]=q end end;function h.byte_is_alphanumeric(s)local t=i[s]return c(t,m)~=0 end;function h.byte_is_hex(s)return c(i[s],l)~=0 end;function h.byte_is_valid_colorchar(s)return h.byte_is_alphanumeric(s)or s==("-"):byte()end;function h.get_last_modified(u)local v=g.fs_open(u,"r",438)if not v then return end;local w=g.fs_fstat(v)g.fs_close(v)if w then return w.mtime.nsec else return end end;function h.merge(...)local x={}for p=1,select("#",...)do local y=select(p,...)if type(y)~="table"then return{}end;for z,q in pairs(y)do x[z]=q end end;return x end;function h.parse_hex(s)return e(i[s],4)end;local A=string.byte"%"function h.percent_or_hex(q)if q:byte(-1)==A then return tonumber(q:sub(1,-2))/100*255 end;local B=tonumber(q)if B>255 then return end;return B end;function h.watch_file(u,C,...)if not u or type(C)~="function"then return end;local D=g.fs_realpath(u)if not D then return end;local E;local F={...}local G=g.new_fs_event()local function H(I,J,K)C(J,unpack(F))G:stop()if not I or not h.get_last_modified(J)then E()end end;function E()g.fs_event_start(G,D,{},vim.schedule_wrap(function(...)H(...)end))end;E()return G end;return h
