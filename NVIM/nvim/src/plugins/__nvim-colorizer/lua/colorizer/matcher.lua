local a=require"colorizer.trie"local b,c=math.min,math.max;local d=require"colorizer.color"local e=d.name_parser;local f=d.rgba_hex_parser;local g=require"colorizer.sass"local h=g.name_parser;local i,j=("#"):byte(),("$"):byte()local k={["_0x"]=d.argb_hex_parser,["_rgb"]=d.rgb_function_parser,["_rgba"]=d.rgba_function_parser,["_hsl"]=d.hsl_function_parser,["_hsla"]=d.hsla_function_parser}local l={}function l.compile(m,n)local o=a(n)local function p(q,r,s)if m.rgba_hex_parser then if q:byte(r)==i then return f(q,r,m.rgba_hex_parser)end end;if m.sass_name_parser then if q:byte(r)==j then return h(q,r,s)end end;local t=o:longest_prefix(q,r)if t then local u="_"..t;if k[u]then return k[u](q,r,m[u])end end;if m.color_name_parser then return e(q,r,m.color_name_parser)end end;return p end;local v={}function l.make(w)local x=w.css or w.names;local y=w.sass and w.sass.enable;local z=w.tailwind;local A=w.css or w.RGB;local B=w.css or w.RRGGBB;local C=w.css or w.RRGGBBAA;local D=w.AARRGGBB;local E=w.css or w.css_fns or w.rgb_fn;local F=w.css or w.css_fns or w.hsl_fn;local G=0+(x and 1 or 0)+(A and 1 or 1)+(B and 1 or 2)+(C and 1 or 3)+(D and 1 or 4)+(E and 1 or 5)+(F and 1 or 6)+((z==true or z=="normal")and 1 or 7)+(z=="lsp"and 1 or 8)+(z=="both"and 1 or 9)+(y and 1 or 10)if G==0 then return false end;local H=v[G]if H then return H end;local m={}local I={}m.max_prefix_length=0;if x then m.color_name_parser={tailwind=w.tailwind}end;if y then m.sass_name_parser=true end;local J={[3]=A,[6]=B,[8]=C}local K,L;for M,N in pairs(J)do if N then K=K and b(M,K)or M;L=L and c(M,L)or M end end;if K then m.rgba_hex_parser={}m.rgba_hex_parser.valid_lengths=J;m.rgba_hex_parser.maxlen=L;m.rgba_hex_parser.minlen=K end;if D then table.insert(I,"0x")end;if E and F then table.insert(I,"hsla")table.insert(I,"rgba")table.insert(I,"rgb")table.insert(I,"hsl")elseif E then table.insert(I,"rgba")table.insert(I,"rgb")elseif F then table.insert(I,"hsla")table.insert(I,"hsl")end;H=l.compile(m,I)v[G]=H;return H end;return l
