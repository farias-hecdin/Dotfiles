local a={}a.heading_number_base_pattern="%d+%."a.max_level=4;local function b(c)local d=a.heading_number_base_pattern;local e,f;repeat local g,h=string.find(c,d)d=d..a.heading_number_base_pattern;if g~=nil then e=g;f=h end until g==nil;return e,f end;function a.update_line(i,j,k)vim.api.nvim_buf_set_text(0,i,0,i,j,{k})end;function a.replaceHeadingNumber(l,m,n,o)local p=a.max_level;if o then p=0 end;if n>p then m=""end;if string.len(m)>0 then m=" "..m end;local g,h=b(l)if nil==g or g~=n+2 then return string.rep("#",n)..m.." "..vim.trim(string.sub(l,n+1,-1))end;return string.rep("#",n)..m.." "..vim.trim(string.sub(l,h+1,-1))end;function a.insert_heading_number(q)local r={}for s=1,#q do local n=q[s][3]if s==1 then r[n]=1;goto t end;if not r[n]then r[n]=0 end;if q[s][3]<q[s-1][3]then r[n]=r[n]+1 end;if q[s][3]==q[s-1][3]then r[n]=r[n]+1 end;if q[s][3]>q[s-1][3]then for u=q[s-1][3]+1,q[s][3]-1 do r[u]=0 end;r[n]=1 end::t::local m=""for v=1,n do m=m..(r[v]or 0).."."end;table.insert(q[s],m)end;return q end;function a.change_heading_level(w,x)local y;if x<0 and math.abs(x)>=w[3]then y=1 else y=w[3]+x end;local z,h=b(w[1])local A;if h==nil then A=string.rep("#",y).." "..vim.trim(string.sub(w[2],w[3]+1,-1))else A=string.rep("#",y)..vim.trim(string.sub(w[2],h+1,-1))end;return{w[1],A,y}end;function a.setup(B)a.max_level=B.max_level or a.max_level end;return a
