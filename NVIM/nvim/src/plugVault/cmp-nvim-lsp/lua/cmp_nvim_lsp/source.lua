local a={}a.new=function(b)local self=setmetatable({},{__index=a})self.client=b;self.request_ids={}return self end;a.get_debug_name=function(self)return table.concat({'nvim_lsp',self.client.name},':')end;a.is_available=function(self)if self.client.is_stopped()then return false end;local c=vim.api.nvim_get_current_buf()local d=vim.lsp.get_clients~=nil and vim.lsp.get_clients or vim.lsp.get_active_clients;if vim.tbl_isempty(d({bufnr=c,id=self.client.id}))then return false end;if not self:_get(self.client.server_capabilities,{'completionProvider'})then return false end;return true end;a.get_position_encoding_kind=function(self)return self:_get(self.client.server_capabilities,{'positionEncoding'})or self.client.offset_encoding or'utf-16'end;a.get_trigger_characters=function(self)return self:_get(self.client.server_capabilities,{'completionProvider','triggerCharacters'})or{}end;a.get_keyword_pattern=function(self,e)local f;f=e.option or{}f=f[self.client.name]or{}return f.keyword_pattern or require('cmp').get_config().completion.keyword_pattern end;a.complete=function(self,e,g)local h=vim.lsp.util.make_position_params(0,self.client.offset_encoding)h.context={}h.context.triggerKind=e.completion_context.triggerKind;h.context.triggerCharacter=e.completion_context.triggerCharacter;self:_request('textDocument/completion',h,function(i,j)g(j)end)end;a.resolve=function(self,k,g)if self.client.is_stopped()then return g()end;if not self:_get(self.client.server_capabilities,{'completionProvider','resolveProvider'})then return g()end;self:_request('completionItem/resolve',k,function(i,j)g(j or k)end)end;a.execute=function(self,k,g)if self.client.is_stopped()then return g()end;if not k.command then return g()end;self:_request('workspace/executeCommand',k.command,function(i,i)g()end)end;a._get=function(i,l,m)local n=l;for i,o in ipairs(m)do n=n[o]if not n then return nil end end;return n end;a._request=function(self,p,e,g)if self.request_ids[p]~=nil then self.client.cancel_request(self.request_ids[p])self.request_ids[p]=nil end;local i,q;i,q=self.client.request(p,e,function(r,s,t)if self.request_ids[p]~=q then return end;self.request_ids[p]=nil;if r and r.code==-32801 then self:_request(p,e,g)return end;if p==s then g(r,t)else g(r,s)end end)self.request_ids[p]=q end;return a
