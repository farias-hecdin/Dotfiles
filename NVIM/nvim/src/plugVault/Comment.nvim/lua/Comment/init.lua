local a={}function a.setup(b)local c=require('Comment.config'):set(b):get()if c.mappings then local d=require('Comment.api')local e=vim.api.nvim_get_vvar;local f=vim.keymap.set;if c.mappings.basic then f('n',c.opleader.line,'<Plug>(comment_toggle_linewise)',{desc='Comment toggle linewise'})f('n',c.opleader.block,'<Plug>(comment_toggle_blockwise)',{desc='Comment toggle blockwise'})f('n',c.toggler.line,function()return e('count')==0 and'<Plug>(comment_toggle_linewise_current)'or'<Plug>(comment_toggle_linewise_count)'end,{expr=true,desc='Comment toggle current line'})f('n',c.toggler.block,function()return e('count')==0 and'<Plug>(comment_toggle_blockwise_current)'or'<Plug>(comment_toggle_blockwise_count)'end,{expr=true,desc='Comment toggle current block'})f('x',c.opleader.line,'<Plug>(comment_toggle_linewise_visual)',{desc='Comment toggle linewise (visual)'})f('x',c.opleader.block,'<Plug>(comment_toggle_blockwise_visual)',{desc='Comment toggle blockwise (visual)'})end;if c.mappings.extra then f('n',c.extra.below,d.insert.linewise.below,{desc='Comment insert below'})f('n',c.extra.above,d.insert.linewise.above,{desc='Comment insert above'})f('n',c.extra.eol,d.locked('insert.linewise.eol'),{desc='Comment insert end of line'})end end;return c end;return a
