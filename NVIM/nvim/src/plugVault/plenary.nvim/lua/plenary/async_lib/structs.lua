local a={}Deque={}Deque.__index=Deque;function Deque.new()return setmetatable({first=0,last=-1},Deque)end;function Deque:pushleft(b)local c=self.first-1;self.first=c;self[c]=b end;function Deque:pushright(b)local d=self.last+1;self.last=d;self[d]=b end;function Deque:popleft()local c=self.first;if c>self.last then return nil end;local b=self[c]self[c]=nil;self.first=c+1;return b end;function Deque:popright()local d=self.last;if self.first>d then return nil end;local b=self[d]self[d]=nil;self.last=d-1;return b end;function Deque:is_empty()return self:len()==0 end;function Deque:len()return self.last-self.first+1 end;function Deque:ipairs_left()local e=self.first;return function()local f=self[e]local g=e;if f then e=e+1;return g,f end end end;function Deque:ipairs_right()local e=self.last;return function()local f=self[e]local g=e;if f then e=e-1;return g,f end end end;function Deque:clear()for e,h in self:ipairs_left()do self[e]=nil end;self.first=0;self.last=-1 end;a.Deque=Deque;return a
